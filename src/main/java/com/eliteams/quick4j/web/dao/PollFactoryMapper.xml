<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eliteams.quick4j.web.dao.PollFactoryMapper">
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.PollFactory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="XZQHDM" jdbcType="VARCHAR" property="xzqhdm" />
    <result column="XZQHMC" jdbcType="VARCHAR" property="xzqhmc" />
    <result column="TJNF" jdbcType="VARCHAR" property="tjnf" />
    <result column="ZZJGDM" jdbcType="VARCHAR" property="zzjgdm" />
    <result column="DWMC_GZ" jdbcType="VARCHAR" property="dwmcGz" />
    <result column="SSDM" jdbcType="VARCHAR" property="ssdm" />
    <result column="SSKZDY" jdbcType="VARCHAR" property="sskzdy" />
    <result column="YYDWMC" jdbcType="VARCHAR" property="yydwmc" />
    <result column="FDDBR" jdbcType="VARCHAR" property="fddbr" />
    <result column="QYXXDZ_S_ZZQ_ZXS" jdbcType="VARCHAR" property="qyxxdzSZzqZxs" />
    <result column="QYXXDZ_DQ_S_Z_M" jdbcType="VARCHAR" property="qyxxdzDqSZM" />
    <result column="QYXXDZ_X_Q_S_Q" jdbcType="VARCHAR" property="qyxxdzXQSQ" />
    <result column="QYXXDZ_X_Z" jdbcType="VARCHAR" property="qyxxdzXZ" />
    <result column="QYXXDZ_J_C_MPH" jdbcType="VARCHAR" property="qyxxdzJCMph" />
    <result column="ZXJD_D" jdbcType="VARCHAR" property="zxjdD" />
    <result column="ZXJD_F" jdbcType="VARCHAR" property="zxjdF" />
    <result column="ZXJD_M" jdbcType="VARCHAR" property="zxjdM" />
    <result column="JD" jdbcType="VARCHAR" property="jd" />
    <result column="ZXWD_D" jdbcType="VARCHAR" property="zxwdD" />
    <result column="ZXWD_F" jdbcType="VARCHAR" property="zxwdF" />
    <result column="ZXWD_M" jdbcType="VARCHAR" property="zxwdM" />
    <result column="WD" jdbcType="VARCHAR" property="wd" />
    <result column="LXFSDHHM" jdbcType="VARCHAR" property="lxfsdhhm" />
    <result column="LXFSLXR" jdbcType="VARCHAR" property="lxfslxr" />
    <result column="LXFSCZHM" jdbcType="VARCHAR" property="lxfsczhm" />
    <result column="LXFSYZBM" jdbcType="VARCHAR" property="lxfsyzbm" />
    <result column="WSCLSSLX" jdbcType="VARCHAR" property="wsclsslx" />
    <result column="JCSJ" jdbcType="VARCHAR" property="jcsj" />
    <result column="WSCLJB" jdbcType="VARCHAR" property="wscljb" />
    <result column="WSCLFFMC1" jdbcType="VARCHAR" property="wsclffmc1" />
    <result column="WSCLFFDM1" jdbcType="VARCHAR" property="wsclffdm1" />
    <result column="WSCLFFMC2" jdbcType="VARCHAR" property="wsclffmc2" />
    <result column="WSCLFFDM2" jdbcType="VARCHAR" property="wsclffdm2" />
    <result column="PSQXLXMC" jdbcType="VARCHAR" property="psqxlxmc" />
    <result column="PSQXLXDM" jdbcType="VARCHAR" property="psqxlxdm" />
    <result column="SNSTMC" jdbcType="VARCHAR" property="snstmc" />
    <result column="SNSTDM" jdbcType="VARCHAR" property="snstdm" />
    <result column="YXTS_T" jdbcType="VARCHAR" property="yxtsT" />
    <result column="LJWCTZ_WY" jdbcType="VARCHAR" property="ljwctzWy" />
    <result column="XZGDZCTZ_WY" jdbcType="VARCHAR" property="xzgdzctzWy" />
    <result column="YXFY_WY" jdbcType="VARCHAR" property="yxfyWy" />
    <result column="YDL_WQWS" jdbcType="VARCHAR" property="ydlWqws" />
    <result column="WSSJCLNL_D_R" jdbcType="VARCHAR" property="wssjclnlDR" />
    <result column="WSSJCLL_WD" jdbcType="VARCHAR" property="wssjcllWd" />
    <result column="QZ_CLSHWSL_WD" jdbcType="VARCHAR" property="qzClshwslWd" />
    <result column="QZ_CLGYFSL_WD" jdbcType="VARCHAR" property="qzClgyfslWd" />
    <result column="QZ_CLBXQWDSL_WD" jdbcType="VARCHAR" property="qzClbxqwdslWd" />
    <result column="ZSSSCL_WD" jdbcType="VARCHAR" property="zsssclWd" />
    <result column="ZSSLYL_WD" jdbcType="VARCHAR" property="zsslylWd" />
    <result column="QZ_GYYSL_WD" jdbcType="VARCHAR" property="qzGyyslWd" />
    <result column="QZ_SZYS_WD" jdbcType="VARCHAR" property="qzSzysWd" />
    <result column="QZ_JGYSL_WD" jdbcType="VARCHAR" property="qzJgyslWd" />
    <result column="WNCSL_D" jdbcType="VARCHAR" property="wncslD" />
    <result column="WNCZL_D" jdbcType="VARCHAR" property="wnczlD" />
    <result column="QZ_TDLYL_D" jdbcType="VARCHAR" property="qzTdlylD" />
    <result column="QZ_TMCZL_D" jdbcType="VARCHAR" property="qzTmczlD" />
    <result column="QZ_JZCLLYL_D" jdbcType="VARCHAR" property="qzJzcllylD" />
    <result column="QZ_FSCZL_D" jdbcType="VARCHAR" property="qzFsczlD" />
    <result column="WNQDDQL_D" jdbcType="VARCHAR" property="wnqddqlD" />
    <result column="HXXYLQCL_D" jdbcType="VARCHAR" property="hxxylqclD" />
    <result column="HXXYLJKND_HK_S" jdbcType="VARCHAR" property="hxxyljkndHkS" />
    <result column="HXXYLCKND_HK_S" jdbcType="VARCHAR" property="hxxylckndHkS" />
    <result column="ADQCL_D" jdbcType="VARCHAR" property="adqclD" />
    <result column="ADJKND_HK_S" jdbcType="VARCHAR" property="adjkndHkS" />
    <result column="ADCKND_HK_S" jdbcType="VARCHAR" property="adckndHkS" />
    <result column="YLQCL_D" jdbcType="VARCHAR" property="ylqclD" />
    <result column="YLJKND_HK_S" jdbcType="VARCHAR" property="yljkndHkS" />
    <result column="YLCKND_HK_S" jdbcType="VARCHAR" property="ylckndHkS" />
    <result column="ZDQCL_D" jdbcType="VARCHAR" property="zdqclD" />
    <result column="ZDJKND_HK_S" jdbcType="VARCHAR" property="zdjkndHkS" />
    <result column="ZDCKND_HK_S" jdbcType="VARCHAR" property="zdckndHkS" />
    <result column="ZLQCL_QK" jdbcType="VARCHAR" property="zlqclQk" />
    <result column="ZLJKND_HK_S" jdbcType="VARCHAR" property="zljkndHkS" />
    <result column="ZLCKND_HK_S" jdbcType="VARCHAR" property="zlckndHkS" />
    <result column="HFFQCL_QK" jdbcType="VARCHAR" property="hffqclQk" />
    <result column="HFFJKND_HK_S" jdbcType="VARCHAR" property="hffjkndHkS" />
    <result column="HFFCKND_HK_S" jdbcType="VARCHAR" property="hffckndHkS" />
    <result column="QHWQCL_QK" jdbcType="VARCHAR" property="qhwqclQk" />
    <result column="QHWJKND_HK_S" jdbcType="VARCHAR" property="qhwjkndHkS" />
    <result column="QHWCKND_HK_S" jdbcType="VARCHAR" property="qhwckndHkS" />
    <result column="SQCL_QK" jdbcType="VARCHAR" property="sqclQk" />
    <result column="SJKND_HK_S" jdbcType="VARCHAR" property="sjkndHkS" />
    <result column="SCKND_HK_S" jdbcType="VARCHAR" property="sckndHkS" />
    <result column="QQCL_QK" jdbcType="VARCHAR" property="qqclQk" />
    <result column="QJKND_HK_S" jdbcType="VARCHAR" property="qjkndHkS" />
    <result column="QCKND_HK_S" jdbcType="VARCHAR" property="qckndHkS" />
    <result column="GQCL_QK" jdbcType="VARCHAR" property="gqclQk" />
    <result column="GJKND_HK_S" jdbcType="VARCHAR" property="gjkndHkS" />
    <result column="GCKND_HK_S" jdbcType="VARCHAR" property="gckndHkS" />
    <result column="GQCL_QK_dup1" jdbcType="VARCHAR" property="gqclQkDup1" />
    <result column="GJKND_WK_S" jdbcType="VARCHAR" property="gjkndWkS" />
    <result column="GCKND_WK_S" jdbcType="VARCHAR" property="gckndWkS" />
    <result column="ZGQCL_QK" jdbcType="VARCHAR" property="zgqclQk" />
    <result column="ZGJKND_HK_S" jdbcType="VARCHAR" property="zgjkndHkS" />
    <result column="ZGCKND_HK_S" jdbcType="VARCHAR" property="zgckndHkS" />
    <result column="LJGQCL_QK" jdbcType="VARCHAR" property="ljgqclQk" />
    <result column="LJGJKND_HK_S" jdbcType="VARCHAR" property="ljgjkndHkS" />
    <result column="LJGCKND_HK_S" jdbcType="VARCHAR" property="ljgckndHkS" />
    <result column="GY_CLSL_WD_R" jdbcType="VARCHAR" property="gyClslWdR" />
    <result column="GY_XZCLSL_WD_R" jdbcType="VARCHAR" property="gyXzclslWdR" />
    <result column="GY_YXTS_T" jdbcType="VARCHAR" property="gyYxtsT" />
    <result column="GY_CODJKND_HK_S" jdbcType="VARCHAR" property="gyCodjkndHkS" />
    <result column="GY_CODCKND_HK_S" jdbcType="VARCHAR" property="gyCodckndHkS" />
    <result column="GY_ADJKND_HK_S" jdbcType="VARCHAR" property="gyAdjkndHkS" />
    <result column="GY_ADCKND_HK_S" jdbcType="VARCHAR" property="gyAdckndHkS" />
    <result column="SH_CLSL_WD_R" jdbcType="VARCHAR" property="shClslWdR" />
    <result column="SH_XZCLSL_WD_R" jdbcType="VARCHAR" property="shXzclslWdR" />
    <result column="SH_CODJKND_HK_S" jdbcType="VARCHAR" property="shCodjkndHkS" />
    <result column="SH_CODCKND_HK_S" jdbcType="VARCHAR" property="shCodckndHkS" />
    <result column="SH_ADJKND_HK_S" jdbcType="VARCHAR" property="shAdjkndHkS" />
    <result column="SH_ADCKND_HK_S" jdbcType="VARCHAR" property="shAdckndHkS" />
    <result column="HDXZSHCODQCL_D" jdbcType="VARCHAR" property="hdxzshcodqclD" />
    <result column="HDXZSHADQCL_D" jdbcType="VARCHAR" property="hdxzshadqclD" />
    <result column="BZ" jdbcType="VARCHAR" property="bz" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, XZQHDM, XZQHMC, TJNF, ZZJGDM, DWMC_GZ, SSDM, SSKZDY, YYDWMC, FDDBR, QYXXDZ_S_ZZQ_ZXS, 
    QYXXDZ_DQ_S_Z_M, QYXXDZ_X_Q_S_Q, QYXXDZ_X_Z, QYXXDZ_J_C_MPH, ZXJD_D, ZXJD_F, ZXJD_M, 
    JD, ZXWD_D, ZXWD_F, ZXWD_M, WD, LXFSDHHM, LXFSLXR, LXFSCZHM, LXFSYZBM, WSCLSSLX, 
    JCSJ, WSCLJB, WSCLFFMC1, WSCLFFDM1, WSCLFFMC2, WSCLFFDM2, PSQXLXMC, PSQXLXDM, SNSTMC, 
    SNSTDM, YXTS_T, LJWCTZ_WY, XZGDZCTZ_WY, YXFY_WY, YDL_WQWS, WSSJCLNL_D_R, WSSJCLL_WD, 
    QZ_CLSHWSL_WD, QZ_CLGYFSL_WD, QZ_CLBXQWDSL_WD, ZSSSCL_WD, ZSSLYL_WD, QZ_GYYSL_WD, 
    QZ_SZYS_WD, QZ_JGYSL_WD, WNCSL_D, WNCZL_D, QZ_TDLYL_D, QZ_TMCZL_D, QZ_JZCLLYL_D, 
    QZ_FSCZL_D, WNQDDQL_D, HXXYLQCL_D, HXXYLJKND_HK_S, HXXYLCKND_HK_S, ADQCL_D, ADJKND_HK_S, 
    ADCKND_HK_S, YLQCL_D, YLJKND_HK_S, YLCKND_HK_S, ZDQCL_D, ZDJKND_HK_S, ZDCKND_HK_S, 
    ZLQCL_QK, ZLJKND_HK_S, ZLCKND_HK_S, HFFQCL_QK, HFFJKND_HK_S, HFFCKND_HK_S, QHWQCL_QK, 
    QHWJKND_HK_S, QHWCKND_HK_S, SQCL_QK, SJKND_HK_S, SCKND_HK_S, QQCL_QK, QJKND_HK_S, 
    QCKND_HK_S, GQCL_QK, GJKND_HK_S, GCKND_HK_S, GQCL_QK_dup1, GJKND_WK_S, GCKND_WK_S, 
    ZGQCL_QK, ZGJKND_HK_S, ZGCKND_HK_S, LJGQCL_QK, LJGJKND_HK_S, LJGCKND_HK_S, GY_CLSL_WD_R, 
    GY_XZCLSL_WD_R, GY_YXTS_T, GY_CODJKND_HK_S, GY_CODCKND_HK_S, GY_ADJKND_HK_S, GY_ADCKND_HK_S, 
    SH_CLSL_WD_R, SH_XZCLSL_WD_R, SH_CODJKND_HK_S, SH_CODCKND_HK_S, SH_ADJKND_HK_S, SH_ADCKND_HK_S, 
    HDXZSHCODQCL_D, HDXZSHADQCL_D, BZ, is_del
  </sql>
  <select id="selectByExample" parameterType="com.eliteams.quick4j.web.model.PollFactoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from poll_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from poll_factory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from poll_factory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.PollFactoryExample">
    delete from poll_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.PollFactory">
    insert into poll_factory (id, XZQHDM, XZQHMC, 
      TJNF, ZZJGDM, DWMC_GZ, 
      SSDM, SSKZDY, YYDWMC, 
      FDDBR, QYXXDZ_S_ZZQ_ZXS, QYXXDZ_DQ_S_Z_M, 
      QYXXDZ_X_Q_S_Q, QYXXDZ_X_Z, QYXXDZ_J_C_MPH, 
      ZXJD_D, ZXJD_F, ZXJD_M, 
      JD, ZXWD_D, ZXWD_F, ZXWD_M, 
      WD, LXFSDHHM, LXFSLXR, 
      LXFSCZHM, LXFSYZBM, WSCLSSLX, 
      JCSJ, WSCLJB, WSCLFFMC1, 
      WSCLFFDM1, WSCLFFMC2, WSCLFFDM2, 
      PSQXLXMC, PSQXLXDM, SNSTMC, 
      SNSTDM, YXTS_T, LJWCTZ_WY, 
      XZGDZCTZ_WY, YXFY_WY, YDL_WQWS, 
      WSSJCLNL_D_R, WSSJCLL_WD, QZ_CLSHWSL_WD, 
      QZ_CLGYFSL_WD, QZ_CLBXQWDSL_WD, ZSSSCL_WD, 
      ZSSLYL_WD, QZ_GYYSL_WD, QZ_SZYS_WD, 
      QZ_JGYSL_WD, WNCSL_D, WNCZL_D, 
      QZ_TDLYL_D, QZ_TMCZL_D, QZ_JZCLLYL_D, 
      QZ_FSCZL_D, WNQDDQL_D, HXXYLQCL_D, 
      HXXYLJKND_HK_S, HXXYLCKND_HK_S, ADQCL_D, 
      ADJKND_HK_S, ADCKND_HK_S, YLQCL_D, 
      YLJKND_HK_S, YLCKND_HK_S, ZDQCL_D, 
      ZDJKND_HK_S, ZDCKND_HK_S, ZLQCL_QK, 
      ZLJKND_HK_S, ZLCKND_HK_S, HFFQCL_QK, 
      HFFJKND_HK_S, HFFCKND_HK_S, QHWQCL_QK, 
      QHWJKND_HK_S, QHWCKND_HK_S, SQCL_QK, 
      SJKND_HK_S, SCKND_HK_S, QQCL_QK, 
      QJKND_HK_S, QCKND_HK_S, GQCL_QK, 
      GJKND_HK_S, GCKND_HK_S, GQCL_QK_dup1, 
      GJKND_WK_S, GCKND_WK_S, ZGQCL_QK, 
      ZGJKND_HK_S, ZGCKND_HK_S, LJGQCL_QK, 
      LJGJKND_HK_S, LJGCKND_HK_S, GY_CLSL_WD_R, 
      GY_XZCLSL_WD_R, GY_YXTS_T, GY_CODJKND_HK_S, 
      GY_CODCKND_HK_S, GY_ADJKND_HK_S, GY_ADCKND_HK_S, 
      SH_CLSL_WD_R, SH_XZCLSL_WD_R, SH_CODJKND_HK_S, 
      SH_CODCKND_HK_S, SH_ADJKND_HK_S, SH_ADCKND_HK_S, 
      HDXZSHCODQCL_D, HDXZSHADQCL_D, BZ, 
      is_del)
    values (#{id,jdbcType=INTEGER}, #{xzqhdm,jdbcType=VARCHAR}, #{xzqhmc,jdbcType=VARCHAR}, 
      #{tjnf,jdbcType=VARCHAR}, #{zzjgdm,jdbcType=VARCHAR}, #{dwmcGz,jdbcType=VARCHAR}, 
      #{ssdm,jdbcType=VARCHAR}, #{sskzdy,jdbcType=VARCHAR}, #{yydwmc,jdbcType=VARCHAR}, 
      #{fddbr,jdbcType=VARCHAR}, #{qyxxdzSZzqZxs,jdbcType=VARCHAR}, #{qyxxdzDqSZM,jdbcType=VARCHAR}, 
      #{qyxxdzXQSQ,jdbcType=VARCHAR}, #{qyxxdzXZ,jdbcType=VARCHAR}, #{qyxxdzJCMph,jdbcType=VARCHAR}, 
      #{zxjdD,jdbcType=VARCHAR}, #{zxjdF,jdbcType=VARCHAR}, #{zxjdM,jdbcType=VARCHAR}, 
      #{jd,jdbcType=VARCHAR}, #{zxwdD,jdbcType=VARCHAR}, #{zxwdF,jdbcType=VARCHAR}, #{zxwdM,jdbcType=VARCHAR}, 
      #{wd,jdbcType=VARCHAR}, #{lxfsdhhm,jdbcType=VARCHAR}, #{lxfslxr,jdbcType=VARCHAR}, 
      #{lxfsczhm,jdbcType=VARCHAR}, #{lxfsyzbm,jdbcType=VARCHAR}, #{wsclsslx,jdbcType=VARCHAR}, 
      #{jcsj,jdbcType=VARCHAR}, #{wscljb,jdbcType=VARCHAR}, #{wsclffmc1,jdbcType=VARCHAR}, 
      #{wsclffdm1,jdbcType=VARCHAR}, #{wsclffmc2,jdbcType=VARCHAR}, #{wsclffdm2,jdbcType=VARCHAR}, 
      #{psqxlxmc,jdbcType=VARCHAR}, #{psqxlxdm,jdbcType=VARCHAR}, #{snstmc,jdbcType=VARCHAR}, 
      #{snstdm,jdbcType=VARCHAR}, #{yxtsT,jdbcType=VARCHAR}, #{ljwctzWy,jdbcType=VARCHAR}, 
      #{xzgdzctzWy,jdbcType=VARCHAR}, #{yxfyWy,jdbcType=VARCHAR}, #{ydlWqws,jdbcType=VARCHAR}, 
      #{wssjclnlDR,jdbcType=VARCHAR}, #{wssjcllWd,jdbcType=VARCHAR}, #{qzClshwslWd,jdbcType=VARCHAR}, 
      #{qzClgyfslWd,jdbcType=VARCHAR}, #{qzClbxqwdslWd,jdbcType=VARCHAR}, #{zsssclWd,jdbcType=VARCHAR}, 
      #{zsslylWd,jdbcType=VARCHAR}, #{qzGyyslWd,jdbcType=VARCHAR}, #{qzSzysWd,jdbcType=VARCHAR}, 
      #{qzJgyslWd,jdbcType=VARCHAR}, #{wncslD,jdbcType=VARCHAR}, #{wnczlD,jdbcType=VARCHAR}, 
      #{qzTdlylD,jdbcType=VARCHAR}, #{qzTmczlD,jdbcType=VARCHAR}, #{qzJzcllylD,jdbcType=VARCHAR}, 
      #{qzFsczlD,jdbcType=VARCHAR}, #{wnqddqlD,jdbcType=VARCHAR}, #{hxxylqclD,jdbcType=VARCHAR}, 
      #{hxxyljkndHkS,jdbcType=VARCHAR}, #{hxxylckndHkS,jdbcType=VARCHAR}, #{adqclD,jdbcType=VARCHAR}, 
      #{adjkndHkS,jdbcType=VARCHAR}, #{adckndHkS,jdbcType=VARCHAR}, #{ylqclD,jdbcType=VARCHAR}, 
      #{yljkndHkS,jdbcType=VARCHAR}, #{ylckndHkS,jdbcType=VARCHAR}, #{zdqclD,jdbcType=VARCHAR}, 
      #{zdjkndHkS,jdbcType=VARCHAR}, #{zdckndHkS,jdbcType=VARCHAR}, #{zlqclQk,jdbcType=VARCHAR}, 
      #{zljkndHkS,jdbcType=VARCHAR}, #{zlckndHkS,jdbcType=VARCHAR}, #{hffqclQk,jdbcType=VARCHAR}, 
      #{hffjkndHkS,jdbcType=VARCHAR}, #{hffckndHkS,jdbcType=VARCHAR}, #{qhwqclQk,jdbcType=VARCHAR}, 
      #{qhwjkndHkS,jdbcType=VARCHAR}, #{qhwckndHkS,jdbcType=VARCHAR}, #{sqclQk,jdbcType=VARCHAR}, 
      #{sjkndHkS,jdbcType=VARCHAR}, #{sckndHkS,jdbcType=VARCHAR}, #{qqclQk,jdbcType=VARCHAR}, 
      #{qjkndHkS,jdbcType=VARCHAR}, #{qckndHkS,jdbcType=VARCHAR}, #{gqclQk,jdbcType=VARCHAR}, 
      #{gjkndHkS,jdbcType=VARCHAR}, #{gckndHkS,jdbcType=VARCHAR}, #{gqclQkDup1,jdbcType=VARCHAR}, 
      #{gjkndWkS,jdbcType=VARCHAR}, #{gckndWkS,jdbcType=VARCHAR}, #{zgqclQk,jdbcType=VARCHAR}, 
      #{zgjkndHkS,jdbcType=VARCHAR}, #{zgckndHkS,jdbcType=VARCHAR}, #{ljgqclQk,jdbcType=VARCHAR}, 
      #{ljgjkndHkS,jdbcType=VARCHAR}, #{ljgckndHkS,jdbcType=VARCHAR}, #{gyClslWdR,jdbcType=VARCHAR}, 
      #{gyXzclslWdR,jdbcType=VARCHAR}, #{gyYxtsT,jdbcType=VARCHAR}, #{gyCodjkndHkS,jdbcType=VARCHAR}, 
      #{gyCodckndHkS,jdbcType=VARCHAR}, #{gyAdjkndHkS,jdbcType=VARCHAR}, #{gyAdckndHkS,jdbcType=VARCHAR}, 
      #{shClslWdR,jdbcType=VARCHAR}, #{shXzclslWdR,jdbcType=VARCHAR}, #{shCodjkndHkS,jdbcType=VARCHAR}, 
      #{shCodckndHkS,jdbcType=VARCHAR}, #{shAdjkndHkS,jdbcType=VARCHAR}, #{shAdckndHkS,jdbcType=VARCHAR}, 
      #{hdxzshcodqclD,jdbcType=VARCHAR}, #{hdxzshadqclD,jdbcType=VARCHAR}, #{bz,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.PollFactory">
    insert into poll_factory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="xzqhdm != null">
        XZQHDM,
      </if>
      <if test="xzqhmc != null">
        XZQHMC,
      </if>
      <if test="tjnf != null">
        TJNF,
      </if>
      <if test="zzjgdm != null">
        ZZJGDM,
      </if>
      <if test="dwmcGz != null">
        DWMC_GZ,
      </if>
      <if test="ssdm != null">
        SSDM,
      </if>
      <if test="sskzdy != null">
        SSKZDY,
      </if>
      <if test="yydwmc != null">
        YYDWMC,
      </if>
      <if test="fddbr != null">
        FDDBR,
      </if>
      <if test="qyxxdzSZzqZxs != null">
        QYXXDZ_S_ZZQ_ZXS,
      </if>
      <if test="qyxxdzDqSZM != null">
        QYXXDZ_DQ_S_Z_M,
      </if>
      <if test="qyxxdzXQSQ != null">
        QYXXDZ_X_Q_S_Q,
      </if>
      <if test="qyxxdzXZ != null">
        QYXXDZ_X_Z,
      </if>
      <if test="qyxxdzJCMph != null">
        QYXXDZ_J_C_MPH,
      </if>
      <if test="zxjdD != null">
        ZXJD_D,
      </if>
      <if test="zxjdF != null">
        ZXJD_F,
      </if>
      <if test="zxjdM != null">
        ZXJD_M,
      </if>
      <if test="jd != null">
        JD,
      </if>
      <if test="zxwdD != null">
        ZXWD_D,
      </if>
      <if test="zxwdF != null">
        ZXWD_F,
      </if>
      <if test="zxwdM != null">
        ZXWD_M,
      </if>
      <if test="wd != null">
        WD,
      </if>
      <if test="lxfsdhhm != null">
        LXFSDHHM,
      </if>
      <if test="lxfslxr != null">
        LXFSLXR,
      </if>
      <if test="lxfsczhm != null">
        LXFSCZHM,
      </if>
      <if test="lxfsyzbm != null">
        LXFSYZBM,
      </if>
      <if test="wsclsslx != null">
        WSCLSSLX,
      </if>
      <if test="jcsj != null">
        JCSJ,
      </if>
      <if test="wscljb != null">
        WSCLJB,
      </if>
      <if test="wsclffmc1 != null">
        WSCLFFMC1,
      </if>
      <if test="wsclffdm1 != null">
        WSCLFFDM1,
      </if>
      <if test="wsclffmc2 != null">
        WSCLFFMC2,
      </if>
      <if test="wsclffdm2 != null">
        WSCLFFDM2,
      </if>
      <if test="psqxlxmc != null">
        PSQXLXMC,
      </if>
      <if test="psqxlxdm != null">
        PSQXLXDM,
      </if>
      <if test="snstmc != null">
        SNSTMC,
      </if>
      <if test="snstdm != null">
        SNSTDM,
      </if>
      <if test="yxtsT != null">
        YXTS_T,
      </if>
      <if test="ljwctzWy != null">
        LJWCTZ_WY,
      </if>
      <if test="xzgdzctzWy != null">
        XZGDZCTZ_WY,
      </if>
      <if test="yxfyWy != null">
        YXFY_WY,
      </if>
      <if test="ydlWqws != null">
        YDL_WQWS,
      </if>
      <if test="wssjclnlDR != null">
        WSSJCLNL_D_R,
      </if>
      <if test="wssjcllWd != null">
        WSSJCLL_WD,
      </if>
      <if test="qzClshwslWd != null">
        QZ_CLSHWSL_WD,
      </if>
      <if test="qzClgyfslWd != null">
        QZ_CLGYFSL_WD,
      </if>
      <if test="qzClbxqwdslWd != null">
        QZ_CLBXQWDSL_WD,
      </if>
      <if test="zsssclWd != null">
        ZSSSCL_WD,
      </if>
      <if test="zsslylWd != null">
        ZSSLYL_WD,
      </if>
      <if test="qzGyyslWd != null">
        QZ_GYYSL_WD,
      </if>
      <if test="qzSzysWd != null">
        QZ_SZYS_WD,
      </if>
      <if test="qzJgyslWd != null">
        QZ_JGYSL_WD,
      </if>
      <if test="wncslD != null">
        WNCSL_D,
      </if>
      <if test="wnczlD != null">
        WNCZL_D,
      </if>
      <if test="qzTdlylD != null">
        QZ_TDLYL_D,
      </if>
      <if test="qzTmczlD != null">
        QZ_TMCZL_D,
      </if>
      <if test="qzJzcllylD != null">
        QZ_JZCLLYL_D,
      </if>
      <if test="qzFsczlD != null">
        QZ_FSCZL_D,
      </if>
      <if test="wnqddqlD != null">
        WNQDDQL_D,
      </if>
      <if test="hxxylqclD != null">
        HXXYLQCL_D,
      </if>
      <if test="hxxyljkndHkS != null">
        HXXYLJKND_HK_S,
      </if>
      <if test="hxxylckndHkS != null">
        HXXYLCKND_HK_S,
      </if>
      <if test="adqclD != null">
        ADQCL_D,
      </if>
      <if test="adjkndHkS != null">
        ADJKND_HK_S,
      </if>
      <if test="adckndHkS != null">
        ADCKND_HK_S,
      </if>
      <if test="ylqclD != null">
        YLQCL_D,
      </if>
      <if test="yljkndHkS != null">
        YLJKND_HK_S,
      </if>
      <if test="ylckndHkS != null">
        YLCKND_HK_S,
      </if>
      <if test="zdqclD != null">
        ZDQCL_D,
      </if>
      <if test="zdjkndHkS != null">
        ZDJKND_HK_S,
      </if>
      <if test="zdckndHkS != null">
        ZDCKND_HK_S,
      </if>
      <if test="zlqclQk != null">
        ZLQCL_QK,
      </if>
      <if test="zljkndHkS != null">
        ZLJKND_HK_S,
      </if>
      <if test="zlckndHkS != null">
        ZLCKND_HK_S,
      </if>
      <if test="hffqclQk != null">
        HFFQCL_QK,
      </if>
      <if test="hffjkndHkS != null">
        HFFJKND_HK_S,
      </if>
      <if test="hffckndHkS != null">
        HFFCKND_HK_S,
      </if>
      <if test="qhwqclQk != null">
        QHWQCL_QK,
      </if>
      <if test="qhwjkndHkS != null">
        QHWJKND_HK_S,
      </if>
      <if test="qhwckndHkS != null">
        QHWCKND_HK_S,
      </if>
      <if test="sqclQk != null">
        SQCL_QK,
      </if>
      <if test="sjkndHkS != null">
        SJKND_HK_S,
      </if>
      <if test="sckndHkS != null">
        SCKND_HK_S,
      </if>
      <if test="qqclQk != null">
        QQCL_QK,
      </if>
      <if test="qjkndHkS != null">
        QJKND_HK_S,
      </if>
      <if test="qckndHkS != null">
        QCKND_HK_S,
      </if>
      <if test="gqclQk != null">
        GQCL_QK,
      </if>
      <if test="gjkndHkS != null">
        GJKND_HK_S,
      </if>
      <if test="gckndHkS != null">
        GCKND_HK_S,
      </if>
      <if test="gqclQkDup1 != null">
        GQCL_QK_dup1,
      </if>
      <if test="gjkndWkS != null">
        GJKND_WK_S,
      </if>
      <if test="gckndWkS != null">
        GCKND_WK_S,
      </if>
      <if test="zgqclQk != null">
        ZGQCL_QK,
      </if>
      <if test="zgjkndHkS != null">
        ZGJKND_HK_S,
      </if>
      <if test="zgckndHkS != null">
        ZGCKND_HK_S,
      </if>
      <if test="ljgqclQk != null">
        LJGQCL_QK,
      </if>
      <if test="ljgjkndHkS != null">
        LJGJKND_HK_S,
      </if>
      <if test="ljgckndHkS != null">
        LJGCKND_HK_S,
      </if>
      <if test="gyClslWdR != null">
        GY_CLSL_WD_R,
      </if>
      <if test="gyXzclslWdR != null">
        GY_XZCLSL_WD_R,
      </if>
      <if test="gyYxtsT != null">
        GY_YXTS_T,
      </if>
      <if test="gyCodjkndHkS != null">
        GY_CODJKND_HK_S,
      </if>
      <if test="gyCodckndHkS != null">
        GY_CODCKND_HK_S,
      </if>
      <if test="gyAdjkndHkS != null">
        GY_ADJKND_HK_S,
      </if>
      <if test="gyAdckndHkS != null">
        GY_ADCKND_HK_S,
      </if>
      <if test="shClslWdR != null">
        SH_CLSL_WD_R,
      </if>
      <if test="shXzclslWdR != null">
        SH_XZCLSL_WD_R,
      </if>
      <if test="shCodjkndHkS != null">
        SH_CODJKND_HK_S,
      </if>
      <if test="shCodckndHkS != null">
        SH_CODCKND_HK_S,
      </if>
      <if test="shAdjkndHkS != null">
        SH_ADJKND_HK_S,
      </if>
      <if test="shAdckndHkS != null">
        SH_ADCKND_HK_S,
      </if>
      <if test="hdxzshcodqclD != null">
        HDXZSHCODQCL_D,
      </if>
      <if test="hdxzshadqclD != null">
        HDXZSHADQCL_D,
      </if>
      <if test="bz != null">
        BZ,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="xzqhdm != null">
        #{xzqhdm,jdbcType=VARCHAR},
      </if>
      <if test="xzqhmc != null">
        #{xzqhmc,jdbcType=VARCHAR},
      </if>
      <if test="tjnf != null">
        #{tjnf,jdbcType=VARCHAR},
      </if>
      <if test="zzjgdm != null">
        #{zzjgdm,jdbcType=VARCHAR},
      </if>
      <if test="dwmcGz != null">
        #{dwmcGz,jdbcType=VARCHAR},
      </if>
      <if test="ssdm != null">
        #{ssdm,jdbcType=VARCHAR},
      </if>
      <if test="sskzdy != null">
        #{sskzdy,jdbcType=VARCHAR},
      </if>
      <if test="yydwmc != null">
        #{yydwmc,jdbcType=VARCHAR},
      </if>
      <if test="fddbr != null">
        #{fddbr,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzSZzqZxs != null">
        #{qyxxdzSZzqZxs,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzDqSZM != null">
        #{qyxxdzDqSZM,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzXQSQ != null">
        #{qyxxdzXQSQ,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzXZ != null">
        #{qyxxdzXZ,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzJCMph != null">
        #{qyxxdzJCMph,jdbcType=VARCHAR},
      </if>
      <if test="zxjdD != null">
        #{zxjdD,jdbcType=VARCHAR},
      </if>
      <if test="zxjdF != null">
        #{zxjdF,jdbcType=VARCHAR},
      </if>
      <if test="zxjdM != null">
        #{zxjdM,jdbcType=VARCHAR},
      </if>
      <if test="jd != null">
        #{jd,jdbcType=VARCHAR},
      </if>
      <if test="zxwdD != null">
        #{zxwdD,jdbcType=VARCHAR},
      </if>
      <if test="zxwdF != null">
        #{zxwdF,jdbcType=VARCHAR},
      </if>
      <if test="zxwdM != null">
        #{zxwdM,jdbcType=VARCHAR},
      </if>
      <if test="wd != null">
        #{wd,jdbcType=VARCHAR},
      </if>
      <if test="lxfsdhhm != null">
        #{lxfsdhhm,jdbcType=VARCHAR},
      </if>
      <if test="lxfslxr != null">
        #{lxfslxr,jdbcType=VARCHAR},
      </if>
      <if test="lxfsczhm != null">
        #{lxfsczhm,jdbcType=VARCHAR},
      </if>
      <if test="lxfsyzbm != null">
        #{lxfsyzbm,jdbcType=VARCHAR},
      </if>
      <if test="wsclsslx != null">
        #{wsclsslx,jdbcType=VARCHAR},
      </if>
      <if test="jcsj != null">
        #{jcsj,jdbcType=VARCHAR},
      </if>
      <if test="wscljb != null">
        #{wscljb,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc1 != null">
        #{wsclffmc1,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm1 != null">
        #{wsclffdm1,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc2 != null">
        #{wsclffmc2,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm2 != null">
        #{wsclffdm2,jdbcType=VARCHAR},
      </if>
      <if test="psqxlxmc != null">
        #{psqxlxmc,jdbcType=VARCHAR},
      </if>
      <if test="psqxlxdm != null">
        #{psqxlxdm,jdbcType=VARCHAR},
      </if>
      <if test="snstmc != null">
        #{snstmc,jdbcType=VARCHAR},
      </if>
      <if test="snstdm != null">
        #{snstdm,jdbcType=VARCHAR},
      </if>
      <if test="yxtsT != null">
        #{yxtsT,jdbcType=VARCHAR},
      </if>
      <if test="ljwctzWy != null">
        #{ljwctzWy,jdbcType=VARCHAR},
      </if>
      <if test="xzgdzctzWy != null">
        #{xzgdzctzWy,jdbcType=VARCHAR},
      </if>
      <if test="yxfyWy != null">
        #{yxfyWy,jdbcType=VARCHAR},
      </if>
      <if test="ydlWqws != null">
        #{ydlWqws,jdbcType=VARCHAR},
      </if>
      <if test="wssjclnlDR != null">
        #{wssjclnlDR,jdbcType=VARCHAR},
      </if>
      <if test="wssjcllWd != null">
        #{wssjcllWd,jdbcType=VARCHAR},
      </if>
      <if test="qzClshwslWd != null">
        #{qzClshwslWd,jdbcType=VARCHAR},
      </if>
      <if test="qzClgyfslWd != null">
        #{qzClgyfslWd,jdbcType=VARCHAR},
      </if>
      <if test="qzClbxqwdslWd != null">
        #{qzClbxqwdslWd,jdbcType=VARCHAR},
      </if>
      <if test="zsssclWd != null">
        #{zsssclWd,jdbcType=VARCHAR},
      </if>
      <if test="zsslylWd != null">
        #{zsslylWd,jdbcType=VARCHAR},
      </if>
      <if test="qzGyyslWd != null">
        #{qzGyyslWd,jdbcType=VARCHAR},
      </if>
      <if test="qzSzysWd != null">
        #{qzSzysWd,jdbcType=VARCHAR},
      </if>
      <if test="qzJgyslWd != null">
        #{qzJgyslWd,jdbcType=VARCHAR},
      </if>
      <if test="wncslD != null">
        #{wncslD,jdbcType=VARCHAR},
      </if>
      <if test="wnczlD != null">
        #{wnczlD,jdbcType=VARCHAR},
      </if>
      <if test="qzTdlylD != null">
        #{qzTdlylD,jdbcType=VARCHAR},
      </if>
      <if test="qzTmczlD != null">
        #{qzTmczlD,jdbcType=VARCHAR},
      </if>
      <if test="qzJzcllylD != null">
        #{qzJzcllylD,jdbcType=VARCHAR},
      </if>
      <if test="qzFsczlD != null">
        #{qzFsczlD,jdbcType=VARCHAR},
      </if>
      <if test="wnqddqlD != null">
        #{wnqddqlD,jdbcType=VARCHAR},
      </if>
      <if test="hxxylqclD != null">
        #{hxxylqclD,jdbcType=VARCHAR},
      </if>
      <if test="hxxyljkndHkS != null">
        #{hxxyljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="hxxylckndHkS != null">
        #{hxxylckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="adqclD != null">
        #{adqclD,jdbcType=VARCHAR},
      </if>
      <if test="adjkndHkS != null">
        #{adjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="adckndHkS != null">
        #{adckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="ylqclD != null">
        #{ylqclD,jdbcType=VARCHAR},
      </if>
      <if test="yljkndHkS != null">
        #{yljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="ylckndHkS != null">
        #{ylckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zdqclD != null">
        #{zdqclD,jdbcType=VARCHAR},
      </if>
      <if test="zdjkndHkS != null">
        #{zdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zdckndHkS != null">
        #{zdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zlqclQk != null">
        #{zlqclQk,jdbcType=VARCHAR},
      </if>
      <if test="zljkndHkS != null">
        #{zljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zlckndHkS != null">
        #{zlckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="hffqclQk != null">
        #{hffqclQk,jdbcType=VARCHAR},
      </if>
      <if test="hffjkndHkS != null">
        #{hffjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="hffckndHkS != null">
        #{hffckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="qhwqclQk != null">
        #{qhwqclQk,jdbcType=VARCHAR},
      </if>
      <if test="qhwjkndHkS != null">
        #{qhwjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="qhwckndHkS != null">
        #{qhwckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="sqclQk != null">
        #{sqclQk,jdbcType=VARCHAR},
      </if>
      <if test="sjkndHkS != null">
        #{sjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="sckndHkS != null">
        #{sckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="qqclQk != null">
        #{qqclQk,jdbcType=VARCHAR},
      </if>
      <if test="qjkndHkS != null">
        #{qjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="qckndHkS != null">
        #{qckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gqclQk != null">
        #{gqclQk,jdbcType=VARCHAR},
      </if>
      <if test="gjkndHkS != null">
        #{gjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gckndHkS != null">
        #{gckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gqclQkDup1 != null">
        #{gqclQkDup1,jdbcType=VARCHAR},
      </if>
      <if test="gjkndWkS != null">
        #{gjkndWkS,jdbcType=VARCHAR},
      </if>
      <if test="gckndWkS != null">
        #{gckndWkS,jdbcType=VARCHAR},
      </if>
      <if test="zgqclQk != null">
        #{zgqclQk,jdbcType=VARCHAR},
      </if>
      <if test="zgjkndHkS != null">
        #{zgjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zgckndHkS != null">
        #{zgckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="ljgqclQk != null">
        #{ljgqclQk,jdbcType=VARCHAR},
      </if>
      <if test="ljgjkndHkS != null">
        #{ljgjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="ljgckndHkS != null">
        #{ljgckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gyClslWdR != null">
        #{gyClslWdR,jdbcType=VARCHAR},
      </if>
      <if test="gyXzclslWdR != null">
        #{gyXzclslWdR,jdbcType=VARCHAR},
      </if>
      <if test="gyYxtsT != null">
        #{gyYxtsT,jdbcType=VARCHAR},
      </if>
      <if test="gyCodjkndHkS != null">
        #{gyCodjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gyCodckndHkS != null">
        #{gyCodckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gyAdjkndHkS != null">
        #{gyAdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gyAdckndHkS != null">
        #{gyAdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="shClslWdR != null">
        #{shClslWdR,jdbcType=VARCHAR},
      </if>
      <if test="shXzclslWdR != null">
        #{shXzclslWdR,jdbcType=VARCHAR},
      </if>
      <if test="shCodjkndHkS != null">
        #{shCodjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="shCodckndHkS != null">
        #{shCodckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="shAdjkndHkS != null">
        #{shAdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="shAdckndHkS != null">
        #{shAdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="hdxzshcodqclD != null">
        #{hdxzshcodqclD,jdbcType=VARCHAR},
      </if>
      <if test="hdxzshadqclD != null">
        #{hdxzshadqclD,jdbcType=VARCHAR},
      </if>
      <if test="bz != null">
        #{bz,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.PollFactoryExample" resultType="java.lang.Long">
    select count(*) from poll_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update poll_factory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.xzqhdm != null">
        XZQHDM = #{record.xzqhdm,jdbcType=VARCHAR},
      </if>
      <if test="record.xzqhmc != null">
        XZQHMC = #{record.xzqhmc,jdbcType=VARCHAR},
      </if>
      <if test="record.tjnf != null">
        TJNF = #{record.tjnf,jdbcType=VARCHAR},
      </if>
      <if test="record.zzjgdm != null">
        ZZJGDM = #{record.zzjgdm,jdbcType=VARCHAR},
      </if>
      <if test="record.dwmcGz != null">
        DWMC_GZ = #{record.dwmcGz,jdbcType=VARCHAR},
      </if>
      <if test="record.ssdm != null">
        SSDM = #{record.ssdm,jdbcType=VARCHAR},
      </if>
      <if test="record.sskzdy != null">
        SSKZDY = #{record.sskzdy,jdbcType=VARCHAR},
      </if>
      <if test="record.yydwmc != null">
        YYDWMC = #{record.yydwmc,jdbcType=VARCHAR},
      </if>
      <if test="record.fddbr != null">
        FDDBR = #{record.fddbr,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzSZzqZxs != null">
        QYXXDZ_S_ZZQ_ZXS = #{record.qyxxdzSZzqZxs,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzDqSZM != null">
        QYXXDZ_DQ_S_Z_M = #{record.qyxxdzDqSZM,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzXQSQ != null">
        QYXXDZ_X_Q_S_Q = #{record.qyxxdzXQSQ,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzXZ != null">
        QYXXDZ_X_Z = #{record.qyxxdzXZ,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzJCMph != null">
        QYXXDZ_J_C_MPH = #{record.qyxxdzJCMph,jdbcType=VARCHAR},
      </if>
      <if test="record.zxjdD != null">
        ZXJD_D = #{record.zxjdD,jdbcType=VARCHAR},
      </if>
      <if test="record.zxjdF != null">
        ZXJD_F = #{record.zxjdF,jdbcType=VARCHAR},
      </if>
      <if test="record.zxjdM != null">
        ZXJD_M = #{record.zxjdM,jdbcType=VARCHAR},
      </if>
      <if test="record.jd != null">
        JD = #{record.jd,jdbcType=VARCHAR},
      </if>
      <if test="record.zxwdD != null">
        ZXWD_D = #{record.zxwdD,jdbcType=VARCHAR},
      </if>
      <if test="record.zxwdF != null">
        ZXWD_F = #{record.zxwdF,jdbcType=VARCHAR},
      </if>
      <if test="record.zxwdM != null">
        ZXWD_M = #{record.zxwdM,jdbcType=VARCHAR},
      </if>
      <if test="record.wd != null">
        WD = #{record.wd,jdbcType=VARCHAR},
      </if>
      <if test="record.lxfsdhhm != null">
        LXFSDHHM = #{record.lxfsdhhm,jdbcType=VARCHAR},
      </if>
      <if test="record.lxfslxr != null">
        LXFSLXR = #{record.lxfslxr,jdbcType=VARCHAR},
      </if>
      <if test="record.lxfsczhm != null">
        LXFSCZHM = #{record.lxfsczhm,jdbcType=VARCHAR},
      </if>
      <if test="record.lxfsyzbm != null">
        LXFSYZBM = #{record.lxfsyzbm,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclsslx != null">
        WSCLSSLX = #{record.wsclsslx,jdbcType=VARCHAR},
      </if>
      <if test="record.jcsj != null">
        JCSJ = #{record.jcsj,jdbcType=VARCHAR},
      </if>
      <if test="record.wscljb != null">
        WSCLJB = #{record.wscljb,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffmc1 != null">
        WSCLFFMC1 = #{record.wsclffmc1,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffdm1 != null">
        WSCLFFDM1 = #{record.wsclffdm1,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffmc2 != null">
        WSCLFFMC2 = #{record.wsclffmc2,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffdm2 != null">
        WSCLFFDM2 = #{record.wsclffdm2,jdbcType=VARCHAR},
      </if>
      <if test="record.psqxlxmc != null">
        PSQXLXMC = #{record.psqxlxmc,jdbcType=VARCHAR},
      </if>
      <if test="record.psqxlxdm != null">
        PSQXLXDM = #{record.psqxlxdm,jdbcType=VARCHAR},
      </if>
      <if test="record.snstmc != null">
        SNSTMC = #{record.snstmc,jdbcType=VARCHAR},
      </if>
      <if test="record.snstdm != null">
        SNSTDM = #{record.snstdm,jdbcType=VARCHAR},
      </if>
      <if test="record.yxtsT != null">
        YXTS_T = #{record.yxtsT,jdbcType=VARCHAR},
      </if>
      <if test="record.ljwctzWy != null">
        LJWCTZ_WY = #{record.ljwctzWy,jdbcType=VARCHAR},
      </if>
      <if test="record.xzgdzctzWy != null">
        XZGDZCTZ_WY = #{record.xzgdzctzWy,jdbcType=VARCHAR},
      </if>
      <if test="record.yxfyWy != null">
        YXFY_WY = #{record.yxfyWy,jdbcType=VARCHAR},
      </if>
      <if test="record.ydlWqws != null">
        YDL_WQWS = #{record.ydlWqws,jdbcType=VARCHAR},
      </if>
      <if test="record.wssjclnlDR != null">
        WSSJCLNL_D_R = #{record.wssjclnlDR,jdbcType=VARCHAR},
      </if>
      <if test="record.wssjcllWd != null">
        WSSJCLL_WD = #{record.wssjcllWd,jdbcType=VARCHAR},
      </if>
      <if test="record.qzClshwslWd != null">
        QZ_CLSHWSL_WD = #{record.qzClshwslWd,jdbcType=VARCHAR},
      </if>
      <if test="record.qzClgyfslWd != null">
        QZ_CLGYFSL_WD = #{record.qzClgyfslWd,jdbcType=VARCHAR},
      </if>
      <if test="record.qzClbxqwdslWd != null">
        QZ_CLBXQWDSL_WD = #{record.qzClbxqwdslWd,jdbcType=VARCHAR},
      </if>
      <if test="record.zsssclWd != null">
        ZSSSCL_WD = #{record.zsssclWd,jdbcType=VARCHAR},
      </if>
      <if test="record.zsslylWd != null">
        ZSSLYL_WD = #{record.zsslylWd,jdbcType=VARCHAR},
      </if>
      <if test="record.qzGyyslWd != null">
        QZ_GYYSL_WD = #{record.qzGyyslWd,jdbcType=VARCHAR},
      </if>
      <if test="record.qzSzysWd != null">
        QZ_SZYS_WD = #{record.qzSzysWd,jdbcType=VARCHAR},
      </if>
      <if test="record.qzJgyslWd != null">
        QZ_JGYSL_WD = #{record.qzJgyslWd,jdbcType=VARCHAR},
      </if>
      <if test="record.wncslD != null">
        WNCSL_D = #{record.wncslD,jdbcType=VARCHAR},
      </if>
      <if test="record.wnczlD != null">
        WNCZL_D = #{record.wnczlD,jdbcType=VARCHAR},
      </if>
      <if test="record.qzTdlylD != null">
        QZ_TDLYL_D = #{record.qzTdlylD,jdbcType=VARCHAR},
      </if>
      <if test="record.qzTmczlD != null">
        QZ_TMCZL_D = #{record.qzTmczlD,jdbcType=VARCHAR},
      </if>
      <if test="record.qzJzcllylD != null">
        QZ_JZCLLYL_D = #{record.qzJzcllylD,jdbcType=VARCHAR},
      </if>
      <if test="record.qzFsczlD != null">
        QZ_FSCZL_D = #{record.qzFsczlD,jdbcType=VARCHAR},
      </if>
      <if test="record.wnqddqlD != null">
        WNQDDQL_D = #{record.wnqddqlD,jdbcType=VARCHAR},
      </if>
      <if test="record.hxxylqclD != null">
        HXXYLQCL_D = #{record.hxxylqclD,jdbcType=VARCHAR},
      </if>
      <if test="record.hxxyljkndHkS != null">
        HXXYLJKND_HK_S = #{record.hxxyljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.hxxylckndHkS != null">
        HXXYLCKND_HK_S = #{record.hxxylckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.adqclD != null">
        ADQCL_D = #{record.adqclD,jdbcType=VARCHAR},
      </if>
      <if test="record.adjkndHkS != null">
        ADJKND_HK_S = #{record.adjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.adckndHkS != null">
        ADCKND_HK_S = #{record.adckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.ylqclD != null">
        YLQCL_D = #{record.ylqclD,jdbcType=VARCHAR},
      </if>
      <if test="record.yljkndHkS != null">
        YLJKND_HK_S = #{record.yljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.ylckndHkS != null">
        YLCKND_HK_S = #{record.ylckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.zdqclD != null">
        ZDQCL_D = #{record.zdqclD,jdbcType=VARCHAR},
      </if>
      <if test="record.zdjkndHkS != null">
        ZDJKND_HK_S = #{record.zdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.zdckndHkS != null">
        ZDCKND_HK_S = #{record.zdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.zlqclQk != null">
        ZLQCL_QK = #{record.zlqclQk,jdbcType=VARCHAR},
      </if>
      <if test="record.zljkndHkS != null">
        ZLJKND_HK_S = #{record.zljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.zlckndHkS != null">
        ZLCKND_HK_S = #{record.zlckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.hffqclQk != null">
        HFFQCL_QK = #{record.hffqclQk,jdbcType=VARCHAR},
      </if>
      <if test="record.hffjkndHkS != null">
        HFFJKND_HK_S = #{record.hffjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.hffckndHkS != null">
        HFFCKND_HK_S = #{record.hffckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.qhwqclQk != null">
        QHWQCL_QK = #{record.qhwqclQk,jdbcType=VARCHAR},
      </if>
      <if test="record.qhwjkndHkS != null">
        QHWJKND_HK_S = #{record.qhwjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.qhwckndHkS != null">
        QHWCKND_HK_S = #{record.qhwckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.sqclQk != null">
        SQCL_QK = #{record.sqclQk,jdbcType=VARCHAR},
      </if>
      <if test="record.sjkndHkS != null">
        SJKND_HK_S = #{record.sjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.sckndHkS != null">
        SCKND_HK_S = #{record.sckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.qqclQk != null">
        QQCL_QK = #{record.qqclQk,jdbcType=VARCHAR},
      </if>
      <if test="record.qjkndHkS != null">
        QJKND_HK_S = #{record.qjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.qckndHkS != null">
        QCKND_HK_S = #{record.qckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.gqclQk != null">
        GQCL_QK = #{record.gqclQk,jdbcType=VARCHAR},
      </if>
      <if test="record.gjkndHkS != null">
        GJKND_HK_S = #{record.gjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.gckndHkS != null">
        GCKND_HK_S = #{record.gckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.gqclQkDup1 != null">
        GQCL_QK_dup1 = #{record.gqclQkDup1,jdbcType=VARCHAR},
      </if>
      <if test="record.gjkndWkS != null">
        GJKND_WK_S = #{record.gjkndWkS,jdbcType=VARCHAR},
      </if>
      <if test="record.gckndWkS != null">
        GCKND_WK_S = #{record.gckndWkS,jdbcType=VARCHAR},
      </if>
      <if test="record.zgqclQk != null">
        ZGQCL_QK = #{record.zgqclQk,jdbcType=VARCHAR},
      </if>
      <if test="record.zgjkndHkS != null">
        ZGJKND_HK_S = #{record.zgjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.zgckndHkS != null">
        ZGCKND_HK_S = #{record.zgckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.ljgqclQk != null">
        LJGQCL_QK = #{record.ljgqclQk,jdbcType=VARCHAR},
      </if>
      <if test="record.ljgjkndHkS != null">
        LJGJKND_HK_S = #{record.ljgjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.ljgckndHkS != null">
        LJGCKND_HK_S = #{record.ljgckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.gyClslWdR != null">
        GY_CLSL_WD_R = #{record.gyClslWdR,jdbcType=VARCHAR},
      </if>
      <if test="record.gyXzclslWdR != null">
        GY_XZCLSL_WD_R = #{record.gyXzclslWdR,jdbcType=VARCHAR},
      </if>
      <if test="record.gyYxtsT != null">
        GY_YXTS_T = #{record.gyYxtsT,jdbcType=VARCHAR},
      </if>
      <if test="record.gyCodjkndHkS != null">
        GY_CODJKND_HK_S = #{record.gyCodjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.gyCodckndHkS != null">
        GY_CODCKND_HK_S = #{record.gyCodckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.gyAdjkndHkS != null">
        GY_ADJKND_HK_S = #{record.gyAdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.gyAdckndHkS != null">
        GY_ADCKND_HK_S = #{record.gyAdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.shClslWdR != null">
        SH_CLSL_WD_R = #{record.shClslWdR,jdbcType=VARCHAR},
      </if>
      <if test="record.shXzclslWdR != null">
        SH_XZCLSL_WD_R = #{record.shXzclslWdR,jdbcType=VARCHAR},
      </if>
      <if test="record.shCodjkndHkS != null">
        SH_CODJKND_HK_S = #{record.shCodjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.shCodckndHkS != null">
        SH_CODCKND_HK_S = #{record.shCodckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.shAdjkndHkS != null">
        SH_ADJKND_HK_S = #{record.shAdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.shAdckndHkS != null">
        SH_ADCKND_HK_S = #{record.shAdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="record.hdxzshcodqclD != null">
        HDXZSHCODQCL_D = #{record.hdxzshcodqclD,jdbcType=VARCHAR},
      </if>
      <if test="record.hdxzshadqclD != null">
        HDXZSHADQCL_D = #{record.hdxzshadqclD,jdbcType=VARCHAR},
      </if>
      <if test="record.bz != null">
        BZ = #{record.bz,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update poll_factory
    set id = #{record.id,jdbcType=INTEGER},
      XZQHDM = #{record.xzqhdm,jdbcType=VARCHAR},
      XZQHMC = #{record.xzqhmc,jdbcType=VARCHAR},
      TJNF = #{record.tjnf,jdbcType=VARCHAR},
      ZZJGDM = #{record.zzjgdm,jdbcType=VARCHAR},
      DWMC_GZ = #{record.dwmcGz,jdbcType=VARCHAR},
      SSDM = #{record.ssdm,jdbcType=VARCHAR},
      SSKZDY = #{record.sskzdy,jdbcType=VARCHAR},
      YYDWMC = #{record.yydwmc,jdbcType=VARCHAR},
      FDDBR = #{record.fddbr,jdbcType=VARCHAR},
      QYXXDZ_S_ZZQ_ZXS = #{record.qyxxdzSZzqZxs,jdbcType=VARCHAR},
      QYXXDZ_DQ_S_Z_M = #{record.qyxxdzDqSZM,jdbcType=VARCHAR},
      QYXXDZ_X_Q_S_Q = #{record.qyxxdzXQSQ,jdbcType=VARCHAR},
      QYXXDZ_X_Z = #{record.qyxxdzXZ,jdbcType=VARCHAR},
      QYXXDZ_J_C_MPH = #{record.qyxxdzJCMph,jdbcType=VARCHAR},
      ZXJD_D = #{record.zxjdD,jdbcType=VARCHAR},
      ZXJD_F = #{record.zxjdF,jdbcType=VARCHAR},
      ZXJD_M = #{record.zxjdM,jdbcType=VARCHAR},
      JD = #{record.jd,jdbcType=VARCHAR},
      ZXWD_D = #{record.zxwdD,jdbcType=VARCHAR},
      ZXWD_F = #{record.zxwdF,jdbcType=VARCHAR},
      ZXWD_M = #{record.zxwdM,jdbcType=VARCHAR},
      WD = #{record.wd,jdbcType=VARCHAR},
      LXFSDHHM = #{record.lxfsdhhm,jdbcType=VARCHAR},
      LXFSLXR = #{record.lxfslxr,jdbcType=VARCHAR},
      LXFSCZHM = #{record.lxfsczhm,jdbcType=VARCHAR},
      LXFSYZBM = #{record.lxfsyzbm,jdbcType=VARCHAR},
      WSCLSSLX = #{record.wsclsslx,jdbcType=VARCHAR},
      JCSJ = #{record.jcsj,jdbcType=VARCHAR},
      WSCLJB = #{record.wscljb,jdbcType=VARCHAR},
      WSCLFFMC1 = #{record.wsclffmc1,jdbcType=VARCHAR},
      WSCLFFDM1 = #{record.wsclffdm1,jdbcType=VARCHAR},
      WSCLFFMC2 = #{record.wsclffmc2,jdbcType=VARCHAR},
      WSCLFFDM2 = #{record.wsclffdm2,jdbcType=VARCHAR},
      PSQXLXMC = #{record.psqxlxmc,jdbcType=VARCHAR},
      PSQXLXDM = #{record.psqxlxdm,jdbcType=VARCHAR},
      SNSTMC = #{record.snstmc,jdbcType=VARCHAR},
      SNSTDM = #{record.snstdm,jdbcType=VARCHAR},
      YXTS_T = #{record.yxtsT,jdbcType=VARCHAR},
      LJWCTZ_WY = #{record.ljwctzWy,jdbcType=VARCHAR},
      XZGDZCTZ_WY = #{record.xzgdzctzWy,jdbcType=VARCHAR},
      YXFY_WY = #{record.yxfyWy,jdbcType=VARCHAR},
      YDL_WQWS = #{record.ydlWqws,jdbcType=VARCHAR},
      WSSJCLNL_D_R = #{record.wssjclnlDR,jdbcType=VARCHAR},
      WSSJCLL_WD = #{record.wssjcllWd,jdbcType=VARCHAR},
      QZ_CLSHWSL_WD = #{record.qzClshwslWd,jdbcType=VARCHAR},
      QZ_CLGYFSL_WD = #{record.qzClgyfslWd,jdbcType=VARCHAR},
      QZ_CLBXQWDSL_WD = #{record.qzClbxqwdslWd,jdbcType=VARCHAR},
      ZSSSCL_WD = #{record.zsssclWd,jdbcType=VARCHAR},
      ZSSLYL_WD = #{record.zsslylWd,jdbcType=VARCHAR},
      QZ_GYYSL_WD = #{record.qzGyyslWd,jdbcType=VARCHAR},
      QZ_SZYS_WD = #{record.qzSzysWd,jdbcType=VARCHAR},
      QZ_JGYSL_WD = #{record.qzJgyslWd,jdbcType=VARCHAR},
      WNCSL_D = #{record.wncslD,jdbcType=VARCHAR},
      WNCZL_D = #{record.wnczlD,jdbcType=VARCHAR},
      QZ_TDLYL_D = #{record.qzTdlylD,jdbcType=VARCHAR},
      QZ_TMCZL_D = #{record.qzTmczlD,jdbcType=VARCHAR},
      QZ_JZCLLYL_D = #{record.qzJzcllylD,jdbcType=VARCHAR},
      QZ_FSCZL_D = #{record.qzFsczlD,jdbcType=VARCHAR},
      WNQDDQL_D = #{record.wnqddqlD,jdbcType=VARCHAR},
      HXXYLQCL_D = #{record.hxxylqclD,jdbcType=VARCHAR},
      HXXYLJKND_HK_S = #{record.hxxyljkndHkS,jdbcType=VARCHAR},
      HXXYLCKND_HK_S = #{record.hxxylckndHkS,jdbcType=VARCHAR},
      ADQCL_D = #{record.adqclD,jdbcType=VARCHAR},
      ADJKND_HK_S = #{record.adjkndHkS,jdbcType=VARCHAR},
      ADCKND_HK_S = #{record.adckndHkS,jdbcType=VARCHAR},
      YLQCL_D = #{record.ylqclD,jdbcType=VARCHAR},
      YLJKND_HK_S = #{record.yljkndHkS,jdbcType=VARCHAR},
      YLCKND_HK_S = #{record.ylckndHkS,jdbcType=VARCHAR},
      ZDQCL_D = #{record.zdqclD,jdbcType=VARCHAR},
      ZDJKND_HK_S = #{record.zdjkndHkS,jdbcType=VARCHAR},
      ZDCKND_HK_S = #{record.zdckndHkS,jdbcType=VARCHAR},
      ZLQCL_QK = #{record.zlqclQk,jdbcType=VARCHAR},
      ZLJKND_HK_S = #{record.zljkndHkS,jdbcType=VARCHAR},
      ZLCKND_HK_S = #{record.zlckndHkS,jdbcType=VARCHAR},
      HFFQCL_QK = #{record.hffqclQk,jdbcType=VARCHAR},
      HFFJKND_HK_S = #{record.hffjkndHkS,jdbcType=VARCHAR},
      HFFCKND_HK_S = #{record.hffckndHkS,jdbcType=VARCHAR},
      QHWQCL_QK = #{record.qhwqclQk,jdbcType=VARCHAR},
      QHWJKND_HK_S = #{record.qhwjkndHkS,jdbcType=VARCHAR},
      QHWCKND_HK_S = #{record.qhwckndHkS,jdbcType=VARCHAR},
      SQCL_QK = #{record.sqclQk,jdbcType=VARCHAR},
      SJKND_HK_S = #{record.sjkndHkS,jdbcType=VARCHAR},
      SCKND_HK_S = #{record.sckndHkS,jdbcType=VARCHAR},
      QQCL_QK = #{record.qqclQk,jdbcType=VARCHAR},
      QJKND_HK_S = #{record.qjkndHkS,jdbcType=VARCHAR},
      QCKND_HK_S = #{record.qckndHkS,jdbcType=VARCHAR},
      GQCL_QK = #{record.gqclQk,jdbcType=VARCHAR},
      GJKND_HK_S = #{record.gjkndHkS,jdbcType=VARCHAR},
      GCKND_HK_S = #{record.gckndHkS,jdbcType=VARCHAR},
      GQCL_QK_dup1 = #{record.gqclQkDup1,jdbcType=VARCHAR},
      GJKND_WK_S = #{record.gjkndWkS,jdbcType=VARCHAR},
      GCKND_WK_S = #{record.gckndWkS,jdbcType=VARCHAR},
      ZGQCL_QK = #{record.zgqclQk,jdbcType=VARCHAR},
      ZGJKND_HK_S = #{record.zgjkndHkS,jdbcType=VARCHAR},
      ZGCKND_HK_S = #{record.zgckndHkS,jdbcType=VARCHAR},
      LJGQCL_QK = #{record.ljgqclQk,jdbcType=VARCHAR},
      LJGJKND_HK_S = #{record.ljgjkndHkS,jdbcType=VARCHAR},
      LJGCKND_HK_S = #{record.ljgckndHkS,jdbcType=VARCHAR},
      GY_CLSL_WD_R = #{record.gyClslWdR,jdbcType=VARCHAR},
      GY_XZCLSL_WD_R = #{record.gyXzclslWdR,jdbcType=VARCHAR},
      GY_YXTS_T = #{record.gyYxtsT,jdbcType=VARCHAR},
      GY_CODJKND_HK_S = #{record.gyCodjkndHkS,jdbcType=VARCHAR},
      GY_CODCKND_HK_S = #{record.gyCodckndHkS,jdbcType=VARCHAR},
      GY_ADJKND_HK_S = #{record.gyAdjkndHkS,jdbcType=VARCHAR},
      GY_ADCKND_HK_S = #{record.gyAdckndHkS,jdbcType=VARCHAR},
      SH_CLSL_WD_R = #{record.shClslWdR,jdbcType=VARCHAR},
      SH_XZCLSL_WD_R = #{record.shXzclslWdR,jdbcType=VARCHAR},
      SH_CODJKND_HK_S = #{record.shCodjkndHkS,jdbcType=VARCHAR},
      SH_CODCKND_HK_S = #{record.shCodckndHkS,jdbcType=VARCHAR},
      SH_ADJKND_HK_S = #{record.shAdjkndHkS,jdbcType=VARCHAR},
      SH_ADCKND_HK_S = #{record.shAdckndHkS,jdbcType=VARCHAR},
      HDXZSHCODQCL_D = #{record.hdxzshcodqclD,jdbcType=VARCHAR},
      HDXZSHADQCL_D = #{record.hdxzshadqclD,jdbcType=VARCHAR},
      BZ = #{record.bz,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.PollFactory">
    update poll_factory
    <set>
      <if test="xzqhdm != null">
        XZQHDM = #{xzqhdm,jdbcType=VARCHAR},
      </if>
      <if test="xzqhmc != null">
        XZQHMC = #{xzqhmc,jdbcType=VARCHAR},
      </if>
      <if test="tjnf != null">
        TJNF = #{tjnf,jdbcType=VARCHAR},
      </if>
      <if test="zzjgdm != null">
        ZZJGDM = #{zzjgdm,jdbcType=VARCHAR},
      </if>
      <if test="dwmcGz != null">
        DWMC_GZ = #{dwmcGz,jdbcType=VARCHAR},
      </if>
      <if test="ssdm != null">
        SSDM = #{ssdm,jdbcType=VARCHAR},
      </if>
      <if test="sskzdy != null">
        SSKZDY = #{sskzdy,jdbcType=VARCHAR},
      </if>
      <if test="yydwmc != null">
        YYDWMC = #{yydwmc,jdbcType=VARCHAR},
      </if>
      <if test="fddbr != null">
        FDDBR = #{fddbr,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzSZzqZxs != null">
        QYXXDZ_S_ZZQ_ZXS = #{qyxxdzSZzqZxs,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzDqSZM != null">
        QYXXDZ_DQ_S_Z_M = #{qyxxdzDqSZM,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzXQSQ != null">
        QYXXDZ_X_Q_S_Q = #{qyxxdzXQSQ,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzXZ != null">
        QYXXDZ_X_Z = #{qyxxdzXZ,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzJCMph != null">
        QYXXDZ_J_C_MPH = #{qyxxdzJCMph,jdbcType=VARCHAR},
      </if>
      <if test="zxjdD != null">
        ZXJD_D = #{zxjdD,jdbcType=VARCHAR},
      </if>
      <if test="zxjdF != null">
        ZXJD_F = #{zxjdF,jdbcType=VARCHAR},
      </if>
      <if test="zxjdM != null">
        ZXJD_M = #{zxjdM,jdbcType=VARCHAR},
      </if>
      <if test="jd != null">
        JD = #{jd,jdbcType=VARCHAR},
      </if>
      <if test="zxwdD != null">
        ZXWD_D = #{zxwdD,jdbcType=VARCHAR},
      </if>
      <if test="zxwdF != null">
        ZXWD_F = #{zxwdF,jdbcType=VARCHAR},
      </if>
      <if test="zxwdM != null">
        ZXWD_M = #{zxwdM,jdbcType=VARCHAR},
      </if>
      <if test="wd != null">
        WD = #{wd,jdbcType=VARCHAR},
      </if>
      <if test="lxfsdhhm != null">
        LXFSDHHM = #{lxfsdhhm,jdbcType=VARCHAR},
      </if>
      <if test="lxfslxr != null">
        LXFSLXR = #{lxfslxr,jdbcType=VARCHAR},
      </if>
      <if test="lxfsczhm != null">
        LXFSCZHM = #{lxfsczhm,jdbcType=VARCHAR},
      </if>
      <if test="lxfsyzbm != null">
        LXFSYZBM = #{lxfsyzbm,jdbcType=VARCHAR},
      </if>
      <if test="wsclsslx != null">
        WSCLSSLX = #{wsclsslx,jdbcType=VARCHAR},
      </if>
      <if test="jcsj != null">
        JCSJ = #{jcsj,jdbcType=VARCHAR},
      </if>
      <if test="wscljb != null">
        WSCLJB = #{wscljb,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc1 != null">
        WSCLFFMC1 = #{wsclffmc1,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm1 != null">
        WSCLFFDM1 = #{wsclffdm1,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc2 != null">
        WSCLFFMC2 = #{wsclffmc2,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm2 != null">
        WSCLFFDM2 = #{wsclffdm2,jdbcType=VARCHAR},
      </if>
      <if test="psqxlxmc != null">
        PSQXLXMC = #{psqxlxmc,jdbcType=VARCHAR},
      </if>
      <if test="psqxlxdm != null">
        PSQXLXDM = #{psqxlxdm,jdbcType=VARCHAR},
      </if>
      <if test="snstmc != null">
        SNSTMC = #{snstmc,jdbcType=VARCHAR},
      </if>
      <if test="snstdm != null">
        SNSTDM = #{snstdm,jdbcType=VARCHAR},
      </if>
      <if test="yxtsT != null">
        YXTS_T = #{yxtsT,jdbcType=VARCHAR},
      </if>
      <if test="ljwctzWy != null">
        LJWCTZ_WY = #{ljwctzWy,jdbcType=VARCHAR},
      </if>
      <if test="xzgdzctzWy != null">
        XZGDZCTZ_WY = #{xzgdzctzWy,jdbcType=VARCHAR},
      </if>
      <if test="yxfyWy != null">
        YXFY_WY = #{yxfyWy,jdbcType=VARCHAR},
      </if>
      <if test="ydlWqws != null">
        YDL_WQWS = #{ydlWqws,jdbcType=VARCHAR},
      </if>
      <if test="wssjclnlDR != null">
        WSSJCLNL_D_R = #{wssjclnlDR,jdbcType=VARCHAR},
      </if>
      <if test="wssjcllWd != null">
        WSSJCLL_WD = #{wssjcllWd,jdbcType=VARCHAR},
      </if>
      <if test="qzClshwslWd != null">
        QZ_CLSHWSL_WD = #{qzClshwslWd,jdbcType=VARCHAR},
      </if>
      <if test="qzClgyfslWd != null">
        QZ_CLGYFSL_WD = #{qzClgyfslWd,jdbcType=VARCHAR},
      </if>
      <if test="qzClbxqwdslWd != null">
        QZ_CLBXQWDSL_WD = #{qzClbxqwdslWd,jdbcType=VARCHAR},
      </if>
      <if test="zsssclWd != null">
        ZSSSCL_WD = #{zsssclWd,jdbcType=VARCHAR},
      </if>
      <if test="zsslylWd != null">
        ZSSLYL_WD = #{zsslylWd,jdbcType=VARCHAR},
      </if>
      <if test="qzGyyslWd != null">
        QZ_GYYSL_WD = #{qzGyyslWd,jdbcType=VARCHAR},
      </if>
      <if test="qzSzysWd != null">
        QZ_SZYS_WD = #{qzSzysWd,jdbcType=VARCHAR},
      </if>
      <if test="qzJgyslWd != null">
        QZ_JGYSL_WD = #{qzJgyslWd,jdbcType=VARCHAR},
      </if>
      <if test="wncslD != null">
        WNCSL_D = #{wncslD,jdbcType=VARCHAR},
      </if>
      <if test="wnczlD != null">
        WNCZL_D = #{wnczlD,jdbcType=VARCHAR},
      </if>
      <if test="qzTdlylD != null">
        QZ_TDLYL_D = #{qzTdlylD,jdbcType=VARCHAR},
      </if>
      <if test="qzTmczlD != null">
        QZ_TMCZL_D = #{qzTmczlD,jdbcType=VARCHAR},
      </if>
      <if test="qzJzcllylD != null">
        QZ_JZCLLYL_D = #{qzJzcllylD,jdbcType=VARCHAR},
      </if>
      <if test="qzFsczlD != null">
        QZ_FSCZL_D = #{qzFsczlD,jdbcType=VARCHAR},
      </if>
      <if test="wnqddqlD != null">
        WNQDDQL_D = #{wnqddqlD,jdbcType=VARCHAR},
      </if>
      <if test="hxxylqclD != null">
        HXXYLQCL_D = #{hxxylqclD,jdbcType=VARCHAR},
      </if>
      <if test="hxxyljkndHkS != null">
        HXXYLJKND_HK_S = #{hxxyljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="hxxylckndHkS != null">
        HXXYLCKND_HK_S = #{hxxylckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="adqclD != null">
        ADQCL_D = #{adqclD,jdbcType=VARCHAR},
      </if>
      <if test="adjkndHkS != null">
        ADJKND_HK_S = #{adjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="adckndHkS != null">
        ADCKND_HK_S = #{adckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="ylqclD != null">
        YLQCL_D = #{ylqclD,jdbcType=VARCHAR},
      </if>
      <if test="yljkndHkS != null">
        YLJKND_HK_S = #{yljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="ylckndHkS != null">
        YLCKND_HK_S = #{ylckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zdqclD != null">
        ZDQCL_D = #{zdqclD,jdbcType=VARCHAR},
      </if>
      <if test="zdjkndHkS != null">
        ZDJKND_HK_S = #{zdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zdckndHkS != null">
        ZDCKND_HK_S = #{zdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zlqclQk != null">
        ZLQCL_QK = #{zlqclQk,jdbcType=VARCHAR},
      </if>
      <if test="zljkndHkS != null">
        ZLJKND_HK_S = #{zljkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zlckndHkS != null">
        ZLCKND_HK_S = #{zlckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="hffqclQk != null">
        HFFQCL_QK = #{hffqclQk,jdbcType=VARCHAR},
      </if>
      <if test="hffjkndHkS != null">
        HFFJKND_HK_S = #{hffjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="hffckndHkS != null">
        HFFCKND_HK_S = #{hffckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="qhwqclQk != null">
        QHWQCL_QK = #{qhwqclQk,jdbcType=VARCHAR},
      </if>
      <if test="qhwjkndHkS != null">
        QHWJKND_HK_S = #{qhwjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="qhwckndHkS != null">
        QHWCKND_HK_S = #{qhwckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="sqclQk != null">
        SQCL_QK = #{sqclQk,jdbcType=VARCHAR},
      </if>
      <if test="sjkndHkS != null">
        SJKND_HK_S = #{sjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="sckndHkS != null">
        SCKND_HK_S = #{sckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="qqclQk != null">
        QQCL_QK = #{qqclQk,jdbcType=VARCHAR},
      </if>
      <if test="qjkndHkS != null">
        QJKND_HK_S = #{qjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="qckndHkS != null">
        QCKND_HK_S = #{qckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gqclQk != null">
        GQCL_QK = #{gqclQk,jdbcType=VARCHAR},
      </if>
      <if test="gjkndHkS != null">
        GJKND_HK_S = #{gjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gckndHkS != null">
        GCKND_HK_S = #{gckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gqclQkDup1 != null">
        GQCL_QK_dup1 = #{gqclQkDup1,jdbcType=VARCHAR},
      </if>
      <if test="gjkndWkS != null">
        GJKND_WK_S = #{gjkndWkS,jdbcType=VARCHAR},
      </if>
      <if test="gckndWkS != null">
        GCKND_WK_S = #{gckndWkS,jdbcType=VARCHAR},
      </if>
      <if test="zgqclQk != null">
        ZGQCL_QK = #{zgqclQk,jdbcType=VARCHAR},
      </if>
      <if test="zgjkndHkS != null">
        ZGJKND_HK_S = #{zgjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="zgckndHkS != null">
        ZGCKND_HK_S = #{zgckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="ljgqclQk != null">
        LJGQCL_QK = #{ljgqclQk,jdbcType=VARCHAR},
      </if>
      <if test="ljgjkndHkS != null">
        LJGJKND_HK_S = #{ljgjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="ljgckndHkS != null">
        LJGCKND_HK_S = #{ljgckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gyClslWdR != null">
        GY_CLSL_WD_R = #{gyClslWdR,jdbcType=VARCHAR},
      </if>
      <if test="gyXzclslWdR != null">
        GY_XZCLSL_WD_R = #{gyXzclslWdR,jdbcType=VARCHAR},
      </if>
      <if test="gyYxtsT != null">
        GY_YXTS_T = #{gyYxtsT,jdbcType=VARCHAR},
      </if>
      <if test="gyCodjkndHkS != null">
        GY_CODJKND_HK_S = #{gyCodjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gyCodckndHkS != null">
        GY_CODCKND_HK_S = #{gyCodckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gyAdjkndHkS != null">
        GY_ADJKND_HK_S = #{gyAdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="gyAdckndHkS != null">
        GY_ADCKND_HK_S = #{gyAdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="shClslWdR != null">
        SH_CLSL_WD_R = #{shClslWdR,jdbcType=VARCHAR},
      </if>
      <if test="shXzclslWdR != null">
        SH_XZCLSL_WD_R = #{shXzclslWdR,jdbcType=VARCHAR},
      </if>
      <if test="shCodjkndHkS != null">
        SH_CODJKND_HK_S = #{shCodjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="shCodckndHkS != null">
        SH_CODCKND_HK_S = #{shCodckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="shAdjkndHkS != null">
        SH_ADJKND_HK_S = #{shAdjkndHkS,jdbcType=VARCHAR},
      </if>
      <if test="shAdckndHkS != null">
        SH_ADCKND_HK_S = #{shAdckndHkS,jdbcType=VARCHAR},
      </if>
      <if test="hdxzshcodqclD != null">
        HDXZSHCODQCL_D = #{hdxzshcodqclD,jdbcType=VARCHAR},
      </if>
      <if test="hdxzshadqclD != null">
        HDXZSHADQCL_D = #{hdxzshadqclD,jdbcType=VARCHAR},
      </if>
      <if test="bz != null">
        BZ = #{bz,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.PollFactory">
    update poll_factory
    set XZQHDM = #{xzqhdm,jdbcType=VARCHAR},
      XZQHMC = #{xzqhmc,jdbcType=VARCHAR},
      TJNF = #{tjnf,jdbcType=VARCHAR},
      ZZJGDM = #{zzjgdm,jdbcType=VARCHAR},
      DWMC_GZ = #{dwmcGz,jdbcType=VARCHAR},
      SSDM = #{ssdm,jdbcType=VARCHAR},
      SSKZDY = #{sskzdy,jdbcType=VARCHAR},
      YYDWMC = #{yydwmc,jdbcType=VARCHAR},
      FDDBR = #{fddbr,jdbcType=VARCHAR},
      QYXXDZ_S_ZZQ_ZXS = #{qyxxdzSZzqZxs,jdbcType=VARCHAR},
      QYXXDZ_DQ_S_Z_M = #{qyxxdzDqSZM,jdbcType=VARCHAR},
      QYXXDZ_X_Q_S_Q = #{qyxxdzXQSQ,jdbcType=VARCHAR},
      QYXXDZ_X_Z = #{qyxxdzXZ,jdbcType=VARCHAR},
      QYXXDZ_J_C_MPH = #{qyxxdzJCMph,jdbcType=VARCHAR},
      ZXJD_D = #{zxjdD,jdbcType=VARCHAR},
      ZXJD_F = #{zxjdF,jdbcType=VARCHAR},
      ZXJD_M = #{zxjdM,jdbcType=VARCHAR},
      JD = #{jd,jdbcType=VARCHAR},
      ZXWD_D = #{zxwdD,jdbcType=VARCHAR},
      ZXWD_F = #{zxwdF,jdbcType=VARCHAR},
      ZXWD_M = #{zxwdM,jdbcType=VARCHAR},
      WD = #{wd,jdbcType=VARCHAR},
      LXFSDHHM = #{lxfsdhhm,jdbcType=VARCHAR},
      LXFSLXR = #{lxfslxr,jdbcType=VARCHAR},
      LXFSCZHM = #{lxfsczhm,jdbcType=VARCHAR},
      LXFSYZBM = #{lxfsyzbm,jdbcType=VARCHAR},
      WSCLSSLX = #{wsclsslx,jdbcType=VARCHAR},
      JCSJ = #{jcsj,jdbcType=VARCHAR},
      WSCLJB = #{wscljb,jdbcType=VARCHAR},
      WSCLFFMC1 = #{wsclffmc1,jdbcType=VARCHAR},
      WSCLFFDM1 = #{wsclffdm1,jdbcType=VARCHAR},
      WSCLFFMC2 = #{wsclffmc2,jdbcType=VARCHAR},
      WSCLFFDM2 = #{wsclffdm2,jdbcType=VARCHAR},
      PSQXLXMC = #{psqxlxmc,jdbcType=VARCHAR},
      PSQXLXDM = #{psqxlxdm,jdbcType=VARCHAR},
      SNSTMC = #{snstmc,jdbcType=VARCHAR},
      SNSTDM = #{snstdm,jdbcType=VARCHAR},
      YXTS_T = #{yxtsT,jdbcType=VARCHAR},
      LJWCTZ_WY = #{ljwctzWy,jdbcType=VARCHAR},
      XZGDZCTZ_WY = #{xzgdzctzWy,jdbcType=VARCHAR},
      YXFY_WY = #{yxfyWy,jdbcType=VARCHAR},
      YDL_WQWS = #{ydlWqws,jdbcType=VARCHAR},
      WSSJCLNL_D_R = #{wssjclnlDR,jdbcType=VARCHAR},
      WSSJCLL_WD = #{wssjcllWd,jdbcType=VARCHAR},
      QZ_CLSHWSL_WD = #{qzClshwslWd,jdbcType=VARCHAR},
      QZ_CLGYFSL_WD = #{qzClgyfslWd,jdbcType=VARCHAR},
      QZ_CLBXQWDSL_WD = #{qzClbxqwdslWd,jdbcType=VARCHAR},
      ZSSSCL_WD = #{zsssclWd,jdbcType=VARCHAR},
      ZSSLYL_WD = #{zsslylWd,jdbcType=VARCHAR},
      QZ_GYYSL_WD = #{qzGyyslWd,jdbcType=VARCHAR},
      QZ_SZYS_WD = #{qzSzysWd,jdbcType=VARCHAR},
      QZ_JGYSL_WD = #{qzJgyslWd,jdbcType=VARCHAR},
      WNCSL_D = #{wncslD,jdbcType=VARCHAR},
      WNCZL_D = #{wnczlD,jdbcType=VARCHAR},
      QZ_TDLYL_D = #{qzTdlylD,jdbcType=VARCHAR},
      QZ_TMCZL_D = #{qzTmczlD,jdbcType=VARCHAR},
      QZ_JZCLLYL_D = #{qzJzcllylD,jdbcType=VARCHAR},
      QZ_FSCZL_D = #{qzFsczlD,jdbcType=VARCHAR},
      WNQDDQL_D = #{wnqddqlD,jdbcType=VARCHAR},
      HXXYLQCL_D = #{hxxylqclD,jdbcType=VARCHAR},
      HXXYLJKND_HK_S = #{hxxyljkndHkS,jdbcType=VARCHAR},
      HXXYLCKND_HK_S = #{hxxylckndHkS,jdbcType=VARCHAR},
      ADQCL_D = #{adqclD,jdbcType=VARCHAR},
      ADJKND_HK_S = #{adjkndHkS,jdbcType=VARCHAR},
      ADCKND_HK_S = #{adckndHkS,jdbcType=VARCHAR},
      YLQCL_D = #{ylqclD,jdbcType=VARCHAR},
      YLJKND_HK_S = #{yljkndHkS,jdbcType=VARCHAR},
      YLCKND_HK_S = #{ylckndHkS,jdbcType=VARCHAR},
      ZDQCL_D = #{zdqclD,jdbcType=VARCHAR},
      ZDJKND_HK_S = #{zdjkndHkS,jdbcType=VARCHAR},
      ZDCKND_HK_S = #{zdckndHkS,jdbcType=VARCHAR},
      ZLQCL_QK = #{zlqclQk,jdbcType=VARCHAR},
      ZLJKND_HK_S = #{zljkndHkS,jdbcType=VARCHAR},
      ZLCKND_HK_S = #{zlckndHkS,jdbcType=VARCHAR},
      HFFQCL_QK = #{hffqclQk,jdbcType=VARCHAR},
      HFFJKND_HK_S = #{hffjkndHkS,jdbcType=VARCHAR},
      HFFCKND_HK_S = #{hffckndHkS,jdbcType=VARCHAR},
      QHWQCL_QK = #{qhwqclQk,jdbcType=VARCHAR},
      QHWJKND_HK_S = #{qhwjkndHkS,jdbcType=VARCHAR},
      QHWCKND_HK_S = #{qhwckndHkS,jdbcType=VARCHAR},
      SQCL_QK = #{sqclQk,jdbcType=VARCHAR},
      SJKND_HK_S = #{sjkndHkS,jdbcType=VARCHAR},
      SCKND_HK_S = #{sckndHkS,jdbcType=VARCHAR},
      QQCL_QK = #{qqclQk,jdbcType=VARCHAR},
      QJKND_HK_S = #{qjkndHkS,jdbcType=VARCHAR},
      QCKND_HK_S = #{qckndHkS,jdbcType=VARCHAR},
      GQCL_QK = #{gqclQk,jdbcType=VARCHAR},
      GJKND_HK_S = #{gjkndHkS,jdbcType=VARCHAR},
      GCKND_HK_S = #{gckndHkS,jdbcType=VARCHAR},
      GQCL_QK_dup1 = #{gqclQkDup1,jdbcType=VARCHAR},
      GJKND_WK_S = #{gjkndWkS,jdbcType=VARCHAR},
      GCKND_WK_S = #{gckndWkS,jdbcType=VARCHAR},
      ZGQCL_QK = #{zgqclQk,jdbcType=VARCHAR},
      ZGJKND_HK_S = #{zgjkndHkS,jdbcType=VARCHAR},
      ZGCKND_HK_S = #{zgckndHkS,jdbcType=VARCHAR},
      LJGQCL_QK = #{ljgqclQk,jdbcType=VARCHAR},
      LJGJKND_HK_S = #{ljgjkndHkS,jdbcType=VARCHAR},
      LJGCKND_HK_S = #{ljgckndHkS,jdbcType=VARCHAR},
      GY_CLSL_WD_R = #{gyClslWdR,jdbcType=VARCHAR},
      GY_XZCLSL_WD_R = #{gyXzclslWdR,jdbcType=VARCHAR},
      GY_YXTS_T = #{gyYxtsT,jdbcType=VARCHAR},
      GY_CODJKND_HK_S = #{gyCodjkndHkS,jdbcType=VARCHAR},
      GY_CODCKND_HK_S = #{gyCodckndHkS,jdbcType=VARCHAR},
      GY_ADJKND_HK_S = #{gyAdjkndHkS,jdbcType=VARCHAR},
      GY_ADCKND_HK_S = #{gyAdckndHkS,jdbcType=VARCHAR},
      SH_CLSL_WD_R = #{shClslWdR,jdbcType=VARCHAR},
      SH_XZCLSL_WD_R = #{shXzclslWdR,jdbcType=VARCHAR},
      SH_CODJKND_HK_S = #{shCodjkndHkS,jdbcType=VARCHAR},
      SH_CODCKND_HK_S = #{shCodckndHkS,jdbcType=VARCHAR},
      SH_ADJKND_HK_S = #{shAdjkndHkS,jdbcType=VARCHAR},
      SH_ADCKND_HK_S = #{shAdckndHkS,jdbcType=VARCHAR},
      HDXZSHCODQCL_D = #{hdxzshcodqclD,jdbcType=VARCHAR},
      HDXZSHADQCL_D = #{hdxzshadqclD,jdbcType=VARCHAR},
      BZ = #{bz,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <update id="deleteById" parameterType="java.lang.Long">
		update poll_factory
		set is_del = 1
		where ID = #{id,jdbcType=INTEGER}
	
  	</update>
    <select id="listAll" resultMap="BaseResultMap">    
        select 
        <include refid="Base_Column_List" />
        from poll_factory
        where
        <if test="map.tjnf != null"> TJNF = #{map.tjnf} and  </if> 
        is_del = 0  
        ORDER BY XZQHMC
   </select>  
   <!-- 分页SQL语句 -->
	<select id="selectByPage" resultMap="BaseResultMap">
		select
		*
		from poll_factory
		WHERE
		<if test="map.tjnf != null"> TJNF = #{map.tjnf} and  </if>
		is_del = 0
		ORDER BY XZQHMC
		limit #{startPos},#{pageSize}
	</select>
	<!-- 取得记录的总数 -->
	<select id="getCount" resultType="long">
		select
		count(*)
		from poll_factory
		where
		<if test="map.tjnf != null"> TJNF = #{map.tjnf} and  </if>
		is_del = 0
		ORDER BY XZQHMC
	</select> 
    <select id="getSearchCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(*)
		from poll_factory
		WHERE
		<trim>  
				<if test="map.tjnf !=null"> TJNF LIKE CONCAT('%', #{map.tjnf},'%') and </if>
				<if test="map.id !=null"> id LIKE CONCAT('%', #{map.id},'%') and </if>
				<if test="map.xzqhmc !=null"> XZQHMC LIKE CONCAT('%', #{map.xzqhmc},'%') and </if>
				<if test="map.zzjgdm !=null"> ZZJGDM LIKE CONCAT('%', #{map.zzjgdm},'%') and </if>
				<if test="map.dwmcGz !=null"> DWMC_GZ LIKE CONCAT('%', #{map.dwmcGz},'%') and </if>
				<if test="map.ssdm !=null"> SSDM LIKE CONCAT('%', #{map.ssdm},'%') and </if>
				<if test="map.sskzdy !=null"> SSKZDY LIKE CONCAT('%', #{map.sskzdy},'%') and </if>
				<if test="map.qyxxdzDqSZM !=null"> QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.qyxxdzDqSZM},'%') and </if>
				<if test="map.qyxxdzXQSQ !=null"> QYXXDZ_X_Q_S_Q LIKE CONCAT('%', #{map.qyxxdzXQSQ},'%') and </if>
				<if test="map.qyxxdzXZ !=null"> QYXXDZ_X_Z LIKE CONCAT('%', #{map.qyxxdzXZ},'%') and </if>
				<if test="map.qyxxdzJCMph !=null"> QYXXDZ_J_C_MPH LIKE CONCAT('%', #{map.qyxxdzJCMph},'%') and </if>
				<if test="map.jd !=null"> JD LIKE CONCAT('%', #{map.jd},'%') and </if>
				<if test="map.wd !=null"> WD LIKE CONCAT('%', #{map.wd},'%') and </if>
				<if test="map.wsclffmc1 !=null"> WSCLFFMC1 LIKE CONCAT('%', #{map.wsclffmc1},'%') and </if>
				<if test="map.psqxlxmc !=null"> PSQXLXMC LIKE CONCAT('%', #{map.psqxlxmc},'%') and </if>
				<if test="map.snstmc !=null"> SNSTMC LIKE CONCAT('%', #{map.snstmc},'%') and </if>
				<if test="map.yxtsT !=null"> YXTS_T LIKE CONCAT('%', #{map.yxtsT},'%') and </if>
				<if test="map.wssjclnlDR !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.wssjclnlDR},'%') and </if>
				<if test="map.wssjcllWd !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.wssjcllWd},'%') and </if>
				<if test="map.qzClshwslWd !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.qzClshwslWd},'%') and </if>
				<if test="map.qzClgyfslWd !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.qzClgyfslWd},'%') and </if>
				<if test="map.hxxylqclD !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.hxxylqclD},'%') and </if>
				<if test="map.hxxyljkndHkS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.hxxyljkndHkS},'%') and </if>
				<if test="map.hxxylckndHkS !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.hxxylckndHkS},'%') and </if>
				<if test="map.adqclD !=null"> ADQCL_D LIKE CONCAT('%', #{map.adqclD},'%') and </if>
				<if test="map.adjkndHkS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.adjkndHkS},'%') and </if>
				<if test="map.adckndHkS !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.adckndHkS},'%') and </if>
				<if test="map.zdqclD !=null"> ZDQCL_D LIKE CONCAT('%', #{map.zdqclD},'%') and </if>
				<if test="map.zdjkndHkS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.zdjkndHkS},'%') and </if>
				<if test="map.zdckndHkS !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.zdckndHkS},'%') and </if>
				<if test="map.zlqclQk !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.zlqclQk},'%') and </if>
				<if test="map.zljkndHkS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.zljkndHkS},'%') and </if>
				<if test="map.zlckndHkS !=null"> ZLCKND_HK_S LIKE CONCAT('%', #{map.zlckndHkS},'%') and </if>      
		        is_del = 0
		</trim>
		ORDER BY XZQHMC
	</select>	
 	<select id="searchByPage" resultMap="BaseResultMap">
		select
		*
		from poll_factory
		WHERE
		<trim>
				<if test="map.tjnf !=null"> TJNF LIKE CONCAT('%', #{map.tjnf},'%') and </if>  
				<if test="map.id !=null"> id LIKE CONCAT('%', #{map.id},'%') and </if>
				<if test="map.xzqhmc !=null"> XZQHMC LIKE CONCAT('%', #{map.xzqhmc},'%') and </if>
				<if test="map.zzjgdm !=null"> ZZJGDM LIKE CONCAT('%', #{map.zzjgdm},'%') and </if>
				<if test="map.dwmcGz !=null"> DWMC_GZ LIKE CONCAT('%', #{map.dwmcGz},'%') and </if>
				<if test="map.ssdm !=null"> SSDM LIKE CONCAT('%', #{map.ssdm},'%') and </if>
				<if test="map.sskzdy !=null"> SSKZDY LIKE CONCAT('%', #{map.sskzdy},'%') and </if>
				<if test="map.qyxxdzDqSZM !=null"> QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.qyxxdzDqSZM},'%') and </if>
				<if test="map.qyxxdzXQSQ !=null"> QYXXDZ_X_Q_S_Q LIKE CONCAT('%', #{map.qyxxdzXQSQ},'%') and </if>
				<if test="map.qyxxdzXZ !=null"> QYXXDZ_X_Z LIKE CONCAT('%', #{map.qyxxdzXZ},'%') and </if>
				<if test="map.qyxxdzJCMph !=null"> QYXXDZ_J_C_MPH LIKE CONCAT('%', #{map.qyxxdzJCMph},'%') and </if>
				<if test="map.jd !=null"> JD LIKE CONCAT('%', #{map.jd},'%') and </if>
				<if test="map.wd !=null"> WD LIKE CONCAT('%', #{map.wd},'%') and </if>
				<if test="map.wsclffmc1 !=null"> WSCLFFMC1 LIKE CONCAT('%', #{map.wsclffmc1},'%') and </if>
				<if test="map.psqxlxmc !=null"> PSQXLXMC LIKE CONCAT('%', #{map.psqxlxmc},'%') and </if>
				<if test="map.snstmc !=null"> SNSTMC LIKE CONCAT('%', #{map.snstmc},'%') and </if>
				<if test="map.yxtsT !=null"> YXTS_T LIKE CONCAT('%', #{map.yxtsT},'%') and </if>
				<if test="map.wssjclnlDR !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.wssjclnlDR},'%') and </if>
				<if test="map.wssjcllWd !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.wssjcllWd},'%') and </if>
				<if test="map.qzClshwslWd !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.qzClshwslWd},'%') and </if>
				<if test="map.qzClgyfslWd !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.qzClgyfslWd},'%') and </if>
				<if test="map.hxxylqclD !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.hxxylqclD},'%') and </if>
				<if test="map.hxxyljkndHkS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.hxxyljkndHkS},'%') and </if>
				<if test="map.hxxylckndHkS !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.hxxylckndHkS},'%') and </if>
				<if test="map.adqclD !=null"> ADQCL_D LIKE CONCAT('%', #{map.adqclD},'%') and </if>
				<if test="map.adjkndHkS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.adjkndHkS},'%') and </if>
				<if test="map.adckndHkS !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.adckndHkS},'%') and </if>
				<if test="map.zdqclD !=null"> ZDQCL_D LIKE CONCAT('%', #{map.zdqclD},'%') and </if>
				<if test="map.zdjkndHkS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.zdjkndHkS},'%') and </if>
				<if test="map.zdckndHkS !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.zdckndHkS},'%') and </if>
				<if test="map.zlqclQk !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.zlqclQk},'%') and </if>
				<if test="map.zljkndHkS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.zljkndHkS},'%') and </if>
				<if test="map.zlckndHkS !=null"> ZLCKND_HK_S LIKE CONCAT('%', #{map.zlckndHkS},'%') and </if>	
		        is_del = 0 
		</trim>
		ORDER BY XZQHMC
		limit #{startPos},#{pageSize}
	</select>	
  
	<select id="selectForMap" resultMap="BaseResultMap">
		select
		*
		from poll_factory
		WHERE
		<trim>  
			<if test="map.tjnf !=null"> TJNF LIKE CONCAT('%', #{map.tjnf},'%') and </if>
			<if test="map.id !=null"> id LIKE CONCAT('%', #{map.id},'%') and </if>
			<if test="map.xzqhmc !=null"> XZQHMC LIKE CONCAT('%', #{map.xzqhmc},'%') and </if>
			<if test="map.zzjgdm !=null"> ZZJGDM LIKE CONCAT('%', #{map.zzjgdm},'%') and </if>
			<if test="map.dwmcGz !=null"> DWMC_GZ LIKE CONCAT('%', #{map.dwmcGz},'%') and </if>
			<if test="map.ssdm !=null"> SSDM LIKE CONCAT('%', #{map.ssdm},'%') and </if>
			<if test="map.sskzdy !=null"> SSKZDY LIKE CONCAT('%', #{map.sskzdy},'%') and </if>
			<if test="map.qyxxdzDqSZM !=null"> QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.qyxxdzDqSZM},'%') and </if>
			<if test="map.qyxxdzXQSQ !=null"> QYXXDZ_X_Q_S_Q LIKE CONCAT('%', #{map.qyxxdzXQSQ},'%') and </if>
			<if test="map.qyxxdzXZ !=null"> QYXXDZ_X_Z LIKE CONCAT('%', #{map.qyxxdzXZ},'%') and </if>
			<if test="map.qyxxdzJCMph !=null"> QYXXDZ_J_C_MPH LIKE CONCAT('%', #{map.qyxxdzJCMph},'%') and </if>
			<if test="map.jd !=null"> JD LIKE CONCAT('%', #{map.jd},'%') and </if>
			<if test="map.wd !=null"> WD LIKE CONCAT('%', #{map.wd},'%') and </if>
			<if test="map.wsclffmc1 !=null"> WSCLFFMC1 LIKE CONCAT('%', #{map.wsclffmc1},'%') and </if>
			<if test="map.psqxlxmc !=null"> PSQXLXMC LIKE CONCAT('%', #{map.psqxlxmc},'%') and </if>
			<if test="map.snstmc !=null"> SNSTMC LIKE CONCAT('%', #{map.snstmc},'%') and </if>
			<if test="map.yxtsT !=null"> YXTS_T LIKE CONCAT('%', #{map.yxtsT},'%') and </if>
			<if test="map.wssjclnlDR !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.wssjclnlDR},'%') and </if>
			<if test="map.wssjcllWd !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.wssjcllWd},'%') and </if>
			<if test="map.qzClshwslWd !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.qzClshwslWd},'%') and </if>
			<if test="map.qzClgyfslWd !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.qzClgyfslWd},'%') and </if>
			<if test="map.hxxylqclD !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.hxxylqclD},'%') and </if>
			<if test="map.hxxyljkndHkS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.hxxyljkndHkS},'%') and </if>
			<if test="map.hxxylckndHkS !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.hxxylckndHkS},'%') and </if>
			<if test="map.adqclD !=null"> ADQCL_D LIKE CONCAT('%', #{map.adqclD},'%') and </if>
			<if test="map.adjkndHkS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.adjkndHkS},'%') and </if>
			<if test="map.adckndHkS !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.adckndHkS},'%') and </if>
			<if test="map.zdqclD !=null"> ZDQCL_D LIKE CONCAT('%', #{map.zdqclD},'%') and </if>
			<if test="map.zdjkndHkS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.zdjkndHkS},'%') and </if>
			<if test="map.zdckndHkS !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.zdckndHkS},'%') and </if>
			<if test="map.zlqclQk !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.zlqclQk},'%') and </if>
			<if test="map.zljkndHkS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.zljkndHkS},'%') and </if>
			<if test="map.zlckndHkS !=null"> ZLCKND_HK_S LIKE CONCAT('%', #{map.zlckndHkS},'%') and </if>	      
	        is_del = 0 
		</trim>
	</select>
    
    <select id="selectKzdySum" resultType="Map">
        select SSKZDY as KZDY,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D
        from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim> 
		group by KZDY
    </select>
    <select id="selectKzdmSum" resultType="Map">
        select SSDM as KZDM,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D
        from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim> 
		group by KZDM
    </select>
    <select id="selectKzdyTotal" resultType="Map">
        select SSKZDY as KZDY,SUM(cast(WSSJCLNL_D_R as SIGNED INTEGER)) as WSSJCLNL_D_R,SUM(cast(WSSJCLL_WD as SIGNED INTEGER)) as WSSJCLL_WD,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(HXXYLJKND_HK_S as SIGNED INTEGER)) as HXXYLJKND_HK_S,SUM(cast(HXXYLCKND_HK_S as SIGNED INTEGER)) as HXXYLCKND_HK_S,
        SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D,SUM(cast(ADJKND_HK_S as SIGNED INTEGER)) as ADJKND_HK_S,SUM(cast(ADCKND_HK_S as SIGNED INTEGER)) as ADCKND_HK_S
        from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	      <if test="list != null and list.size()>0">
	         SSKZDY in
	         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                 #{item}  
             </foreach>
             and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim> 
        group by SSKZDY limit #{startPos},#{pageSize}
    </select>
    <select id="getKzdyCount" resultType="java.lang.Integer">
        select count(*) from (select SSKZDY from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	      <if test="list != null and list.size()>0">
	         SSKZDY in
	         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                 #{item}  
             </foreach>
             and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim> 
        group by SSKZDY) as total
    </select>
        <select id="selectKzdyTotalByName" resultType="Map">
        select SSKZDY as KZDY,SUM(cast(WSSJCLNL_D_R as SIGNED INTEGER)) as WSSJCLNL_D_R,SUM(cast(WSSJCLL_WD as SIGNED INTEGER)) as WSSJCLL_WD,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(HXXYLJKND_HK_S as SIGNED INTEGER)) as HXXYLJKND_HK_S,SUM(cast(HXXYLCKND_HK_S as SIGNED INTEGER)) as HXXYLCKND_HK_S,
        SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D,SUM(cast(ADJKND_HK_S as SIGNED INTEGER)) as ADJKND_HK_S,SUM(cast(ADCKND_HK_S as SIGNED INTEGER)) as ADCKND_HK_S
        from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="name != null">
	        SSKZDY LIKE CONCAT('%', #{name}, '%') and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim> 
        group by SSKZDY limit #{startPos},#{pageSize}
    </select>
    <select id="getKzdyCountByName" resultType="java.lang.Integer">
        select count(*) from (select SSKZDY from poll_factory 
        where
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="name != null">
	        SSKZDY LIKE CONCAT('%', #{name}, '%') and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim>  
        group by SSKZDY) as total
    </select>
    <select id="computeKzdyTotal" resultType="java.lang.Integer">
        select 
        <trim prefix="COALESCE(SUM(cast(" suffix="as SIGNED INTEGER)),0)">
        ${map.prop}
        </trim>
        from poll_factory
        where
        <trim>
	      <if test="map.kzdy != null">
	        SSKZDY = #{map.kzdy} and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim>  
    </select>
    <select id="selectKzdmTotal" resultType="Map">
        select SSDM as KZDM,SUM(cast(WSSJCLNL_D_R as SIGNED INTEGER)) as WSSJCLNL_D_R,SUM(cast(WSSJCLL_WD as SIGNED INTEGER)) as WSSJCLL_WD,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(HXXYLJKND_HK_S as SIGNED INTEGER)) as HXXYLJKND_HK_S,SUM(cast(HXXYLCKND_HK_S as SIGNED INTEGER)) as HXXYLCKND_HK_S,
        SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D,SUM(cast(ADJKND_HK_S as SIGNED INTEGER)) as ADJKND_HK_S,SUM(cast(ADCKND_HK_S as SIGNED INTEGER)) as ADCKND_HK_S
        from poll_factory 
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	      <if test="list != null and list.size()>0">
	         SSDM in
	         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                 #{item}  
             </foreach>
             and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim> 
        group by SSDM limit #{startPos},#{pageSize}
    </select>
    <select id="getKzdmCount" resultType="java.lang.Integer">
        select count(*) from (select SSDM from poll_factory 
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	      <if test="list != null and list.size()>0">
	         SSDM in
	         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                 #{item}  
             </foreach>
             and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim> 
        group by SSDM) as total
    </select>
        <select id="selectKzdmTotalByName" resultType="Map">
        select SSDM as KZDM,SUM(cast(WSSJCLNL_D_R as SIGNED INTEGER)) as WSSJCLNL_D_R,SUM(cast(WSSJCLL_WD as SIGNED INTEGER)) as WSSJCLL_WD,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(HXXYLJKND_HK_S as SIGNED INTEGER)) as HXXYLJKND_HK_S,SUM(cast(HXXYLCKND_HK_S as SIGNED INTEGER)) as HXXYLCKND_HK_S,
        SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D,SUM(cast(ADJKND_HK_S as SIGNED INTEGER)) as ADJKND_HK_S,SUM(cast(ADCKND_HK_S as SIGNED INTEGER)) as ADCKND_HK_S
        from poll_factory 
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="name != null">
	        SSDM LIKE CONCAT('%', #{name}, '%') and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim> 
        group by SSDM limit #{startPos},#{pageSize}
    </select>
    <select id="getKzdmCountByName" resultType="java.lang.Integer">
        select count(*) from (select SSDM from poll_factory 
        where
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="name != null">
	        SSDM LIKE CONCAT('%', #{name}, '%') and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim>  
        group by SSDM) as total
    </select>
    <select id="computeKzdmTotal" resultType="java.lang.Integer">
        select 
        <trim prefix="COALESCE(SUM(cast(" suffix="as SIGNED INTEGER)),0)">
        ${map.prop}
        </trim>
        from poll_factory
        where
        <trim>
	      <if test="map.kzdm != null">
	        SSDM = #{map.kzdm} and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim>  
    </select>
    <select id="selectWater" resultType="Map">
        select distinct SNSTMC as SZLYMC
        from poll_factory
        where
	    is_del = 0 and SNSTMC != ''
    </select>
  
  
  
  
</mapper>